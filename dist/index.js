!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.OfficeUIFabricVue=n():e.OfficeUIFabricVue=n()}(this,function(){return function(e){function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}var t={};return n.m=e,n.c=t,n.i=function(e){return e},n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:i})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},n.p="http://localhost:8080/dist",n(n.s=3)}([function(e,n){e.exports=function(e,n,t,i,o){var s,r=e=e||{},a=typeof e.default;"object"!==a&&"function"!==a||(s=e,r=e.default);var c="function"==typeof r?r.options:r;n&&(c.render=n.render,c.staticRenderFns=n.staticRenderFns),i&&(c._scopeId=i);var l;if(o?(l=function(e){e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,e||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),t&&t.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(o)},c._ssrRegister=l):t&&(l=t),l){var d=c.functional,h=d?c.render:c.beforeCreate;d?c.render=function(e,n){return l.call(n),h(e,n)}:c.beforeCreate=h?[].concat(h,l):[l]}return{esModule:s,exports:r,options:c}}},,,function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=t(5),o=(t.n(i),t(4)),s={install:function(e){t.i(o.a)(e)}};n.default=s},function(e,n,t){"use strict";var i=t(6),o=t(7),s=t(8),r=t(9),a=t(10),c=t(11),l=t(12);n.a=function(e){t.i(i.a)(e),t.i(o.a)(e),t.i(s.a)(e),t.i(r.a)(e),t.i(a.a)(e),t.i(c.a)(e),t.i(l.a)(e)}},function(e,n,t){t(23)(t(22))},function(e,n,t){"use strict";var i=t(24),o=t.n(i),s=t(25),r=t.n(s);n.a=function(e){e.component("ou-breadcrumb",o.a),e.component("ou-breadcrumb-item",r.a)}},function(e,n,t){"use strict";var i=t(26),o=t.n(i);n.a=function(e){e.component("ou-button",o.a)}},function(e,n,t){"use strict";var i=t(27),o=t.n(i);n.a=function(e){e.component("ou-callout",o.a)}},function(e,n,t){"use strict";var i=t(28),o=t.n(i);n.a=function(e){e.component("ou-checkbox",o.a)}},function(e,n,t){"use strict";var i=t(29),o=t.n(i);n.a=function(e){e.component("ou-label",o.a)}},function(e,n,t){"use strict";var i=t(30),o=t.n(i);n.a=function(e){e.component("ou-link",o.a)}},function(e,n,t){"use strict";var i=t(31),o=t.n(i),s=t(32),r=t.n(s);n.a=function(e){e.component("ou-table",o.a),e.component("ou-table-column",r.a)}},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default={mounted:function(){new fabric.Breadcrumb(this.$refs.breadcrumb)}}},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default={props:{href:{type:String}}}},function(e,n,t){"use strict";function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}Object.defineProperty(n,"__esModule",{value:!0}),n.default={props:{type:{type:String,default:"",validator:function(e){return["","primary","hero","compound","small"].includes(e)}},disabled:{type:Boolean,default:!1},icon:{type:String},description:{type:String}},computed:{buttonClass:function(){var e;return e={},i(e,"ms-Button--"+this.type,!!this.type),i(e,"is-disabled",this.disabled),e},iconClass:function(){return i({},"ms-Icon--"+this.icon,!!this.icon)}},methods:{clickEvent:function(){this.$emit("click")}}}},function(e,n,t){"use strict";function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}Object.defineProperty(n,"__esModule",{value:!0}),n.default={props:{type:{type:String,default:"",validator:function(e){return["","actionText","OOBE","peek"].includes(e)}},position:{type:String,default:"right",validator:function(e){return["right","left","top","bottom"].includes(e)}},showClose:{type:Boolean,default:!1},title:{type:String},content:{type:String}},computed:{calloutClass:function(){var e;return e={},i(e,"ms-Callout--"+this.type,!!this.type),i(e,"ms-Callout--close",this.showClose),e}},mounted:function(){new fabric.Callout(this.$refs.callout,this.$refs.calloutTrigger,this.position)}}},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default={props:{value:{type:Boolean},disabled:{type:Boolean,default:!1}},data:function(){return{checkboxInstance:null}},mounted:function(){this.checkboxInstance=new fabric.CheckBox(this.$refs.checkbox),this.value&&!this.disabled?this.checkboxInstance.check():this.checkboxInstance.unCheck()},methods:{toggle:function(){this.$emit("input",this.checkboxInstance.getValue())}}}},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default={props:{disabled:{type:Boolean,default:!1},required:{type:Boolean,default:!1}},computed:{labelClass:function(){return{"is-disabled":this.disabled,"is-required":this.required}}}}},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default={props:{href:{type:String},title:{type:String}},methods:{clickEvent:function(){this.$emit("click")}}}},function(e,n,t){"use strict";function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}Object.defineProperty(n,"__esModule",{value:!0}),n.default={props:{type:{type:String,default:"",validator:function(e){return["","fixed"].includes(e)}},data:{type:Array,required:!0}},data:function(){return{tableColumnItems:[]}},computed:{tableClass:function(){return i({},"ms-Table--"+this.type,!!this.type)}}}},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default={props:{prop:{type:String,required:!0}},beforeMount:function(){this.$parent.tableColumnItems.push(this.prop)}}},function(e,n){e.exports='/**\n * Office UI Fabric JS 1.4.0\n * The JavaScript front-end framework for building experiences for Office 365.\n **/\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n// "use strict";\nvar fabric;\n(function (fabric) {\n    var SCROLL_FRAME_RATE = 33;\n    var Animate = (function () {\n        function Animate() {\n        }\n        /**\n        * @param {HTMLElement} element\n        * @param {object} props Transition properties\n        * @param {number} props.duration The duration of the transition in seconds\n        * @param {number} props.delay A delay in seconds that occurs before the transition starts\n        * @param {string} props.ease An easing equation applied to the transition\n        * @param {function} props.onEnd A function that is called when the transition ends\n        * @param {array} props.onEndArgs An array of parameters applied to the onEnd function\n        * @param {number} props.x props.y props.left, props.opacity etc... CSS values to transition to\n         */\n        Animate.transition = function (element, props) {\n            var obj = { element: element, props: props, transformations: {} };\n            Animate._animationObjects.push(obj);\n            Animate._parseProperties(obj);\n            Animate._createTransition(obj);\n            setTimeout(Animate._setProperties, 0, obj);\n            Animate._setCallback(obj);\n        };\n        /**\n         * @param {HTMLElement} element\n         * @param {string} keyframes A name of a keyframe animation\n         * @param {object} props Animation properties\n         * @param {number} props.duration The duration of the animation in seconds\n         * @param {number} props.delay A delay in seconds that occurs before the animation starts\n         * @param {string} props.ease An easing equation applied to the animation\n         * @param {function} props.onEnd A function that is called when the animation ends\n         * @param {array} props.onEndArgs An array of parameters applied to the onEnd function\n        */\n        Animate.animation = function (element, keyframes, props) {\n            var obj = { element: element, keyframes: keyframes, props: props };\n            Animate._animationObjects.push(obj);\n            Animate._parseProperties(obj);\n            Animate._createAnimation(obj);\n            Animate._setCallback(obj);\n        };\n        /**\n         * @param {HTMLElement} element\n         * @param {object} props Scroll animation properties\n         * @param {number} props.duration The duration of the transition in seconds\n         * @param {number} props.top The end scroll position of the element\n         * @param {number} props.delay A delay in seconds that occurs before the scroll starts\n         * @param {function} props.onEnd A function that is called when the scrolling animation ends\n         * @param {array} props.onEndArgs An array of parameters applied to the onEnd function\n        */\n        Animate.scrollTo = function (element, props) {\n            var obj = { element: element, props: props, step: 0 };\n            Animate._setScrollProperties(obj);\n            if (obj.props.delay) {\n                setTimeout(Animate._animationObjects, obj.props.delay * 1000, obj);\n            }\n            else {\n                Animate._animateScroll(obj);\n            }\n            Animate._animationObjects.push(obj);\n        };\n        Animate._setScrollProperties = function (obj) {\n            obj.beginTop = obj.element.scrollTop;\n            obj.change = obj.props.top - obj.beginTop;\n            obj.props.duration = obj.props.duration * 1000;\n        };\n        Animate._parseProperties = function (obj) {\n            var nonTweenProps = Animate._timeProps.concat(Animate._callbackProps);\n            obj.tweenObj = {};\n            for (var key in obj.props) {\n                if (Animate._contains(nonTweenProps, key)) {\n                    obj[key] = obj.props[key];\n                }\n                else {\n                    obj.tweenObj[key] = obj.props[key];\n                }\n            }\n        };\n        Animate._animateScroll = function (obj) {\n            var totalSteps = obj.props.duration / SCROLL_FRAME_RATE;\n            var top = Animate._easeOutExpo(obj.step++, obj.beginTop, obj.change, totalSteps);\n            obj.element.scrollTop = top;\n            if (obj.step >= totalSteps) {\n                obj.element.scrollTop = obj.props.top;\n                Animate._executeCallback(obj.props);\n                Animate._removeAnimationObject(obj);\n            }\n            else {\n                setTimeout(function () {\n                    requestAnimationFrame(function () {\n                        Animate._animateScroll(obj);\n                    });\n                }, SCROLL_FRAME_RATE);\n            }\n        };\n        Animate._createTransition = function (obj) {\n            var duration = obj.duration || 0;\n            var delay = obj.delay || 0;\n            obj.element.style.transitionProperty = Animate._getTransitionProperties(obj.tweenObj);\n            obj.element.style.transitionDuration = duration.toString() + "s";\n            obj.element.style.transitionTimingFunction = obj.ease || "linear";\n            obj.element.style.transitionDelay = delay.toString() + "s";\n        };\n        Animate._createAnimation = function (obj) {\n            var duration = obj.duration || 0;\n            var delay = obj.delay || 0;\n            obj.element.style.animationName = obj.keyframes;\n            obj.element.style.animationDuration = duration.toString() + "s";\n            obj.element.style.animationTimingFunction = obj.ease || "linear";\n            obj.element.style.animationDelay = delay.toString() + "s";\n            obj.element.style.animationFillMode = "both";\n        };\n        Animate._getTransitionProperties = function (obj) {\n            var hasTransform = false;\n            var hasFilter = false;\n            var properties = [];\n            for (var key in obj) {\n                if (Animate._contains(Animate._transformProps, key)) {\n                    hasTransform = true;\n                }\n                else if (Animate._contains(Animate._filters, key)) {\n                    hasFilter = true;\n                }\n                else {\n                    properties.push(Animate._camelCaseToDash(key));\n                }\n            }\n            if (hasTransform) {\n                properties.push("transform");\n            }\n            if (hasFilter) {\n                properties.push("-webkit-filter");\n                properties.push("filter");\n            }\n            return properties.join(", ");\n        };\n        Animate._setProperties = function (obj) {\n            for (var key in obj.tweenObj) {\n                if (Animate._contains(Animate._transformProps, key)) {\n                    Animate._setTransformValues(obj, key);\n                }\n                else if (Animate._contains(Animate._filters, key)) {\n                    Animate._setFilterValues(obj, key);\n                }\n                else {\n                    Animate._setRegularValues(obj, key);\n                }\n            }\n            if (obj.transformations) {\n                Animate._setTransformations(obj);\n            }\n        };\n        Animate._setRegularValues = function (obj, key) {\n            var value = obj.tweenObj[key];\n            if (value.toString().indexOf("%") === -1) {\n                value += (key !== "opacity") && (key !== "backgroundColor") && (key !== "boxShadow") ? "px" : "";\n            }\n            obj.element.style[key] = value;\n        };\n        Animate._setFilterValues = function (obj, key) {\n            var value = obj.tweenObj[key];\n            if (key === "hueRotate") {\n                value = "(" + value + "deg)";\n            }\n            else {\n                value = key === "blur" ? "(" + value + "px)" : "(" + value + "%)";\n            }\n            key = Animate._camelCaseToDash(key);\n            obj.element.style.webkitFilter = key + value;\n            obj.element.style.filter = key + value;\n        };\n        Animate._setTransformValues = function (obj, key) {\n            if (/x|y|z|scaleX|scaleY|scaleZ|rotate|rotateX|rotateY|rotateZ|skewX|skewY/.test(key)) {\n                obj.transformations[key] = obj.tweenObj[key];\n            }\n        };\n        Animate._setTransformations = function (obj) {\n            var rotate = "", scale = "", skew = "", translate = "";\n            var trans = obj.transformations;\n            translate += trans.x !== undefined && trans.x ? "translateX(" + trans.x + "px) " : "";\n            translate += trans.y !== undefined && trans.y ? "translateY(" + trans.y + "px) " : "";\n            translate += trans.z !== undefined && trans.z ? "translateZ(" + trans.z + "px) " : "";\n            rotate += trans.rotate !== undefined && trans.rotate ? "rotate(" + trans.rotate + "deg) " : "";\n            rotate += trans.rotateX !== undefined && trans.rotateX ? "rotateX(" + trans.rotateX + "deg) " : "";\n            rotate += trans.rotateY !== undefined && trans.rotateY ? "rotate(" + trans.rotateY + "deg) " : "";\n            rotate += trans.rotateZ !== undefined && trans.rotateZ ? "rotate(" + trans.rotateZ + "deg) " : "";\n            scale += trans.scaleX !== undefined && trans.scaleX ? "scaleX(" + trans.scaleX + ") " : "";\n            scale += trans.scaleY !== undefined && trans.scaleY ? "scaleY(" + trans.scaleY + ") " : "";\n            scale += trans.scaleZ !== undefined && trans.scaleZ ? "scaleZ(" + trans.scaleZ + ") " : "";\n            skew += trans.skewX !== undefined && trans.skewX ? "skewX(" + trans.skewX + "deg) " : "";\n            skew += trans.skewY !== undefined && trans.skewY ? "skewY(" + trans.skewY + "deg) " : "";\n            obj.element.style.transform = translate + rotate + scale + skew;\n        };\n        Animate._setCallback = function (obj) {\n            obj.element.addEventListener("webkitTransitionEnd", Animate._complete, false);\n            obj.element.addEventListener("transitionend", Animate._complete, false);\n            obj.element.addEventListener("webkitAnimationEnd", Animate._complete, false);\n            obj.element.addEventListener("animationend", Animate._complete, false);\n        };\n        Animate._complete = function (event) {\n            event.target.removeEventListener("webkitTransitionEnd", Animate._complete);\n            event.target.removeEventListener("transitionend", Animate._complete);\n            event.target.removeEventListener("webkitAnimationEnd", Animate._complete);\n            event.target.removeEventListener("animationend", Animate._complete);\n            var obj = Animate._getAnimationObjByElement(event.target);\n            Animate._executeCallback(obj);\n            Animate._removeAnimationObject(obj);\n        };\n        Animate._getAnimationObjByElement = function (element) {\n            var i = Animate._animationObjects.length;\n            while (i--) {\n                if (Animate._animationObjects[i].element === element) {\n                    return Animate._animationObjects[i];\n                }\n            }\n            return null;\n        };\n        Animate._removeAnimationObject = function (obj) {\n            var i = Animate._animationObjects.length;\n            while (i--) {\n                if (Animate._animationObjects[i] === obj) {\n                    Animate._animationObjects.splice(i, 1);\n                }\n            }\n        };\n        Animate._executeCallback = function (obj) {\n            if (obj.onEnd) {\n                var endArgs = obj.onEndArgs || [];\n                obj.onEnd.apply(null, endArgs);\n            }\n        };\n        Animate._contains = function (array, value) {\n            var i = array.length;\n            while (i--) {\n                if (value === array[i]) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        Animate._camelCaseToDash = function (value) {\n            return value.replace(/\\W+/g, "-").replace(/([a-z\\d])([A-Z])/g, "$1-$2").toLowerCase();\n        };\n        Animate._easeOutExpo = function (time, begin, change, duration) {\n            return (time === duration) ? begin + change : change * (-Math.pow(2, -10 * time / duration) + 1) + begin;\n        };\n        Animate._transformProps = [\n            "x",\n            "y",\n            "z",\n            "scaleX",\n            "scaleY",\n            "scaleZ",\n            "rotate",\n            "rotateX",\n            "rotateY",\n            "rotateZ",\n            "skewX",\n            "skewY"\n        ];\n        Animate._filters = [\n            "blur",\n            "brightness",\n            "contrast",\n            "dropShadow",\n            "grayscale",\n            "hueRotate",\n            "invert",\n            "saturate",\n            "sepia"\n        ];\n        Animate._timeProps = ["duration", "ease", "delay"];\n        Animate._callbackProps = ["onEnd", "onEndArgs"];\n        Animate._animationObjects = [];\n        return Animate;\n    }());\n    fabric.Animate = Animate;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n// "use strict";\nvar fabric;\n(function (fabric) {\n    var Ease = (function () {\n        function Ease() {\n        }\n        Ease.QUAD_EASE_IN = Ease.CB + "(0.550, 0.085, 0.680, 0.530)";\n        Ease.CUBIC_EASE_IN = Ease.CB + "(0.550, 0.055, 0.675, 0.190)";\n        Ease.QUART_EASE_IN = Ease.CB + "(0.895, 0.030, 0.685, 0.220)";\n        Ease.QUINT_EASE_IN = Ease.CB + "(0.755, 0.050, 0.855, 0.060)";\n        Ease.SINE_EASE_IN = Ease.CB + "(0.470, 0, 0.745, 0.715)";\n        Ease.EXPO_EASE_IN = Ease.CB + "(0.950, 0.050, 0.795, 0.035)";\n        Ease.CIRC_EASE_IN = Ease.CB + "(0.600, 0.040, 0.980, 0.335)";\n        Ease.BACK_EASE_IN = Ease.CB + "(0.600, 0.040, 0.980, 0.335)";\n        Ease.QUAD_EASE_OUT = Ease.CB + "(0.250, 0.460, 0.450, 0.940)";\n        Ease.CUBIC_EASE_OUT = Ease.CB + "(0.215, 0.610, 0.355, 1)";\n        Ease.QUART_EASE_OUT = Ease.CB + "(0.165, 0.840, 0.440, 1)";\n        Ease.QUINT_EASE_OUT = Ease.CB + "(0.230, 1, 0.320, 1)";\n        Ease.SINE_EASE_OUT = Ease.CB + "(0.390, 0.575, 0.565, 1)";\n        Ease.EXPO_EASE_OUT = Ease.CB + "(0.190, 1, 0.220, 1)";\n        Ease.CIRC_EASE_OUT = Ease.CB + "(0.075, 0.820, 0.165, 1)";\n        Ease.BACK_EASE_OUT = Ease.CB + "(0.175, 0.885, 0.320, 1.275)";\n        Ease.QUAD_EASE_IN_OUT = Ease.CB + "(0.455, 0.030, 0.515, 0.955)";\n        Ease.CUBIC_EASE_IN_OUT = Ease.CB + "(0.645, 0.045, 0.355, 1)";\n        Ease.QUART_EASE_IN_OUT = Ease.CB + "(0.770, 0, 0.175, 1)";\n        Ease.QUINT_EASE_IN_OUT = Ease.CB + "(0.860, 0, 0.070, 1)";\n        Ease.SINE_EASE_IN_OUT = Ease.CB + "(0.445, 0.050, 0.550, 0.950)";\n        Ease.EXPO_EASE_IN_OUT = Ease.CB + "(1, 0, 0, 1)";\n        Ease.CIRC_EASE_IN_OUT = Ease.CB + "(0.785, 0.135, 0.150, 0.860)";\n        Ease.BACK_EASE_IN_OUT = Ease.CB + "(0.680, -0.550, 0.265, 1.550)";\n        Ease.CB = "cubic-bezier";\n        return Ease;\n    }());\n    fabric.Ease = Ease;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n// "use strict";\n// CustomEvent Polyfill to support IE\n(function () {\n    function CustomEvent(event, params) {\n        params = params || { bubbles: false, cancelable: false, detail: undefined };\n        var evt = document.createEvent("CustomEvent");\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    }\n    ;\n    CustomEvent.prototype = Event.prototype;\n    window.CustomEvent = CustomEvent;\n})();\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/**\n * Button\n *\n * Mostly just a click handler\n *\n */\nvar fabric;\n(function (fabric) {\n    "use strict";\n    var Button = (function () {\n        function Button(container, clickHandler) {\n            this._container = container;\n            if (clickHandler) {\n                this._clickHandler = clickHandler;\n                this._setClick();\n            }\n        }\n        Button.prototype.disposeEvents = function () {\n            this._container.removeEventListener("click", this._clickHandler, false);\n        };\n        Button.prototype._setClick = function () {\n            this._container.addEventListener("click", this._clickHandler, false);\n        };\n        return Button;\n    }());\n    fabric.Button = Button;\n})(fabric || (fabric = {}));\n\n\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/**\n * @namespace fabric\n */\nvar fabric;\n(function (fabric) {\n    "use strict";\n    /**\n     * Breadcrumb component\n     *\n     * Shows the user"s current location in a hierarchy and provides a means of navigating upward.\n     *\n     */\n    var Breadcrumb = (function () {\n        /**\n         *\n         * @param {HTMLElement} container - the target container for an instance of Breadcrumb\n         * @constructor\n         *\n         * If dynamically populating a list run the constructor after the list has been populated\n         * in the DOM.\n        */\n        function Breadcrumb(container) {\n            this._currentMaxItems = 0;\n            this._itemCollection = [];\n            this._tabIndex = 2;\n            this.container = container;\n            this._onResize = this._onResize.bind(this);\n            this._openOverflow = this._openOverflow.bind(this);\n            this._overflowKeyPress = this._overflowKeyPress.bind(this);\n            this._closeOverflow = this._closeOverflow.bind(this);\n            this.removeOutlinesOnClick = this.removeOutlinesOnClick.bind(this);\n            this.init();\n        }\n        /**\n         *  removes focus outlines so they don"t linger after click\n        */\n        Breadcrumb.prototype.removeOutlinesOnClick = function () {\n            this._breadcrumbList.blur();\n        };\n        /**\n         * Adds a breadcrumb item to a breadcrumb\n         * @param itemLabel {String} the item\'s text label\n         * @param itemLink {String} the item\'s href link\n        */\n        Breadcrumb.prototype.addItem = function (itemLabel, itemLink) {\n            this._itemCollection.push({ text: itemLabel, link: itemLink });\n            this._updateBreadcrumbs();\n        };\n        /**\n         * Removes a breadcrumb item by item label in the breadcrumbs list\n         * @param itemLabel {String} the item\'s text label\n        */\n        Breadcrumb.prototype.removeItemByLabel = function (itemLabel) {\n            var i = this._itemCollection.length;\n            while (i--) {\n                if (this._itemCollection[i].text === itemLabel) {\n                    this._itemCollection.splice(i, 1);\n                }\n            }\n            this._updateBreadcrumbs();\n        };\n        ;\n        /**\n         * removes a breadcrumb item by position in the breadcrumb\'s list\n         * index starts at 0\n         * @param value {number} the item\'s index\n        */\n        Breadcrumb.prototype.removeItemByPosition = function (value) {\n            this._itemCollection.splice(value, 1);\n            this._updateBreadcrumbs();\n        };\n        /**\n         * initializes component\n        */\n        Breadcrumb.prototype.init = function () {\n            this._cacheDOM();\n            this._setListeners();\n            this._createItemCollection();\n            this._onResize();\n        };\n        /**\n         * create internal model of list items from DOM\n        */\n        Breadcrumb.prototype._createItemCollection = function () {\n            var length = this._listItems.length;\n            var i = 0;\n            var item;\n            var text;\n            var link;\n            var tabIndex;\n            for (i; i < length; i++) {\n                item = this._listItems[i].querySelector(".ms-Breadcrumb-itemLink");\n                text = item.textContent;\n                link = item.getAttribute("href");\n                tabIndex = parseInt(item.getAttribute("tabindex"), 10);\n                this._itemCollection.push({ link: link, tabIndex: tabIndex, text: text });\n            }\n        };\n        /**\n         * Re-render lists on resize\n         *\n        */\n        Breadcrumb.prototype._onResize = function () {\n            this._closeOverflow(null);\n            this._renderList();\n        };\n        /**\n         * render breadcrumbs and overflow menus\n        */\n        Breadcrumb.prototype._renderList = function () {\n            var maxItems = window.innerWidth > Breadcrumb.MEDIUM ? 4 : 2;\n            if (maxItems !== this._currentMaxItems) {\n                this._updateBreadcrumbs();\n            }\n            this._currentMaxItems = maxItems;\n        };\n        /**\n         * updates the breadcrumbs and overflow menu\n        */\n        Breadcrumb.prototype._updateBreadcrumbs = function () {\n            this._tabIndex = 2;\n            var maxItems = window.innerWidth > Breadcrumb.MEDIUM ? 4 : 2;\n            if (this._itemCollection.length > maxItems) {\n                this._breadcrumb.classList.add("is-overflow");\n            }\n            else {\n                this._breadcrumb.classList.remove("is-overflow");\n            }\n            this._addItemsToOverflow(maxItems);\n            this._addBreadcrumbItems(maxItems);\n        };\n        ;\n        /**\n         * creates the overflow menu\n        */\n        Breadcrumb.prototype._addItemsToOverflow = function (maxItems) {\n            var _this = this;\n            this._resetList(this._contextMenu);\n            var end = this._itemCollection.length - maxItems;\n            var overflowItems = this._itemCollection.slice(0, end);\n            overflowItems.forEach(function (item) {\n                var li = document.createElement("li");\n                li.className = "ms-ContextualMenu-item";\n                var a = document.createElement("a");\n                a.className = "ms-ContextualMenu-link";\n                if (item.link !== null) {\n                    a.setAttribute("href", item.link);\n                }\n                a.setAttribute("tabindex", (_this._tabIndex++).toString());\n                a.textContent = item.text;\n                li.appendChild(a);\n                _this._contextMenu.appendChild(li);\n            });\n        };\n        /**\n         * creates the breadcrumbs\n        */\n        Breadcrumb.prototype._addBreadcrumbItems = function (maxItems) {\n            this._resetList(this._breadcrumbList);\n            var i = this._itemCollection.length - maxItems;\n            i = i < 0 ? 0 : i;\n            if (i >= 0) {\n                for (i; i < this._itemCollection.length; i++) {\n                    var listItem = document.createElement("li");\n                    var item = this._itemCollection[i];\n                    var a = document.createElement("a");\n                    var chevron = document.createElement("i");\n                    listItem.className = "ms-Breadcrumb-listItem";\n                    a.className = "ms-Breadcrumb-itemLink";\n                    if (item.link !== null) {\n                        a.setAttribute("href", item.link);\n                    }\n                    a.setAttribute("tabindex", (this._tabIndex++).toString());\n                    a.textContent = item.text;\n                    chevron.className = "ms-Breadcrumb-chevron ms-Icon ms-Icon--ChevronRight";\n                    listItem.appendChild(a);\n                    listItem.appendChild(chevron);\n                    this._breadcrumbList.appendChild(listItem);\n                }\n            }\n        };\n        /**\n         * resets a list by removing its children\n        */\n        Breadcrumb.prototype._resetList = function (list) {\n            while (list.firstChild) {\n                list.removeChild(list.firstChild);\n            }\n        };\n        /**\n         * opens the overflow menu\n        */\n        Breadcrumb.prototype._openOverflow = function (event) {\n            if (this._overflowMenu.className.indexOf(" is-open") === -1) {\n                this._overflowMenu.classList.add("is-open");\n                this.removeOutlinesOnClick();\n                // force focus rect onto overflow button\n                this._overflowButton.focus();\n            }\n        };\n        Breadcrumb.prototype._overflowKeyPress = function (event) {\n            if (event.keyCode === 13) {\n                this._openOverflow(event);\n            }\n        };\n        /**\n         * closes the overflow menu\n        */\n        Breadcrumb.prototype._closeOverflow = function (event) {\n            if (!event || event.target !== this._overflowButton) {\n                this._overflowMenu.classList.remove("is-open");\n            }\n        };\n        /**\n         * caches elements and values of the component\n        */\n        Breadcrumb.prototype._cacheDOM = function () {\n            this._breadcrumb = this.container;\n            this._breadcrumbList = this._breadcrumb.querySelector(".ms-Breadcrumb-list");\n            this._listItems = this._breadcrumb.querySelectorAll(".ms-Breadcrumb-listItem");\n            this._contextMenu = this._breadcrumb.querySelector(".ms-ContextualMenu");\n            this._overflowButton = this._breadcrumb.querySelector(".ms-Breadcrumb-overflowButton");\n            this._overflowMenu = this._breadcrumb.querySelector(".ms-Breadcrumb-overflowMenu");\n        };\n        /**\n        * sets handlers for resize and button click events\n        */\n        Breadcrumb.prototype._setListeners = function () {\n            window.addEventListener("resize", this._onResize, false);\n            this._overflowButton.addEventListener("click", this._openOverflow, false);\n            this._overflowButton.addEventListener("keypress", this._overflowKeyPress, false);\n            document.addEventListener("click", this._closeOverflow, false);\n            this._breadcrumbList.addEventListener("click", this.removeOutlinesOnClick, false);\n        };\n        // medium breakpoint\n        Breadcrumb.MEDIUM = 639;\n        return Breadcrumb;\n    }());\n    fabric.Breadcrumb = Breadcrumb;\n})(fabric || (fabric = {})); // end fabric namespace\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/**\n * ContextualHost\n *\n * Hosts contextual menus and callouts\n * NOTE: Position bottom only works if html is set to max-height 100%, overflow hidden\n * and body is set to overflow scroll, body is set to height 100%\n *\n */\n/**\n * @namespace fabric\n */\nvar fabric;\n(function (fabric) {\n    /**\n     *\n     * @constructor\n     */\n    var CONTEXT_STATE_CLASS = "is-open";\n    var MODAL_STATE_POSITIONED = "is-positioned";\n    var CONTEXT_HOST_MAIN_CLASS = "ms-ContextualHost-main";\n    var CONTEXT_HOST_BEAK_CLASS = "ms-ContextualHost-beak";\n    var ARROW_LEFT_CLASS = "ms-ContextualHost--arrowLeft";\n    var ARROW_TOP_CLASS = "ms-ContextualHost--arrowTop";\n    var ARROW_BOTTOM_CLASS = "ms-ContextualHost--arrowBottom";\n    var ARROW_RIGHT_CLASS = "ms-ContextualHost--arrowRight";\n    var MODIFIER_BASE = "ms-ContextualHost--";\n    var ARROW_SIZE = 28;\n    var ARROW_OFFSET = 8;\n    var ContextualHost = (function () {\n        function ContextualHost(content, direction, targetElement, hasArrow, modifiers, matchTargetWidth, disposalCallback) {\n            if (hasArrow === void 0) { hasArrow = true; }\n            this._resizeAction = this._resizeAction.bind(this);\n            this._dismissAction = this._dismissAction.bind(this);\n            this._handleKeyUpDismiss = this._handleKeyUpDismiss.bind(this);\n            this._matchTargetWidth = matchTargetWidth || false;\n            this._direction = direction;\n            this._container = this.createContainer();\n            this._contextualHost = this._container;\n            this._contextualHostMain = this._contextualHost.getElementsByClassName(CONTEXT_HOST_MAIN_CLASS)[0];\n            this._contextualHostMain.appendChild(content);\n            this._hasArrow = hasArrow;\n            this._arrow = this._container.getElementsByClassName(CONTEXT_HOST_BEAK_CLASS)[0];\n            this._targetElement = targetElement;\n            this._openModal();\n            this._setResizeDisposal();\n            if (disposalCallback) {\n                this._disposalCallback = disposalCallback;\n            }\n            if (modifiers) {\n                for (var i = 0; i < modifiers.length; i++) {\n                    this._container.classList.add(MODIFIER_BASE + modifiers[i]);\n                }\n            }\n            if (!ContextualHost.hosts) {\n                ContextualHost.hosts = [];\n            }\n            ContextualHost.hosts.push(this);\n        }\n        ContextualHost.prototype.disposeModal = function () {\n            if (ContextualHost.hosts.length > 0) {\n                window.removeEventListener("resize", this._resizeAction, false);\n                document.removeEventListener("click", this._dismissAction, true);\n                document.removeEventListener("keyup", this._handleKeyUpDismiss, true);\n                this._container.parentNode.removeChild(this._container);\n                if (this._disposalCallback) {\n                    this._disposalCallback();\n                }\n                // Dispose of all ContextualHosts\n                var index = ContextualHost.hosts.indexOf(this);\n                ContextualHost.hosts.splice(index, 1);\n                var i = ContextualHost.hosts.length;\n                while (i--) {\n                    ContextualHost.hosts[i].disposeModal();\n                    ContextualHost.hosts.splice(i, 1);\n                }\n            }\n        };\n        ContextualHost.prototype.setChildren = function (value) {\n            if (!this._children) {\n                this._children = [];\n            }\n            this._children.push(value);\n        };\n        ContextualHost.prototype.contains = function (value) {\n            return this._container.contains(value);\n        };\n        ContextualHost.prototype.createContainer = function () {\n            var ContextualHost0 = document.createElement("div");\n            ContextualHost0.setAttribute("class", "ms-ContextualHost");\n            ContextualHost0.innerHTML += " ";\n            var ContextualHost0c1 = document.createElement("div");\n            ContextualHost0c1.setAttribute("class", CONTEXT_HOST_MAIN_CLASS);\n            ContextualHost0c1.innerHTML += " ";\n            ContextualHost0.appendChild(ContextualHost0c1);\n            ContextualHost0.innerHTML += " ";\n            var ContextualHost0c3 = document.createElement("div");\n            ContextualHost0c3.setAttribute("class", CONTEXT_HOST_BEAK_CLASS);\n            ContextualHost0.appendChild(ContextualHost0c3);\n            ContextualHost0.innerHTML += "";\n            return ContextualHost0;\n        };\n        ContextualHost.prototype._openModal = function () {\n            var _this = this;\n            this._copyModalToBody();\n            this._saveModalSize();\n            this._findAvailablePosition();\n            this._showModal();\n            // Delay the click setting\n            setTimeout(function () { _this._setDismissClick(); }, 100);\n        };\n        ContextualHost.prototype._findAvailablePosition = function () {\n            var _posOk;\n            switch (this._direction) {\n                case "left":\n                    // Try the right side\n                    _posOk = this._positionOk(this._tryPosModalLeft.bind(this), this._tryPosModalRight.bind(this), this._tryPosModalBottom.bind(this), this._tryPosModalTop.bind(this));\n                    this._setPosition(_posOk);\n                    break;\n                case "right":\n                    _posOk = this._positionOk(this._tryPosModalRight.bind(this), this._tryPosModalLeft.bind(this), this._tryPosModalBottom.bind(this), this._tryPosModalTop.bind(this));\n                    this._setPosition(_posOk);\n                    break;\n                case "top":\n                    _posOk = this._positionOk(this._tryPosModalTop.bind(this), this._tryPosModalBottom.bind(this));\n                    this._setPosition(_posOk);\n                    break;\n                case "bottom":\n                    _posOk = this._positionOk(this._tryPosModalBottom.bind(this), this._tryPosModalTop.bind(this));\n                    this._setPosition(_posOk);\n                    break;\n                default:\n                    this._setPosition();\n            }\n        };\n        ContextualHost.prototype._showModal = function () {\n            this._container.classList.add(CONTEXT_STATE_CLASS);\n        };\n        ContextualHost.prototype._positionOk = function (pos1, pos2, pos3, pos4) {\n            var _posOk;\n            _posOk = pos1();\n            if (!_posOk) {\n                _posOk = pos2();\n                if (!_posOk && pos3) {\n                    _posOk = pos3();\n                    if (!_posOk && pos4) {\n                        _posOk = pos4();\n                    }\n                }\n            }\n            return _posOk;\n        };\n        ContextualHost.prototype._calcLeft = function (mWidth, teWidth, teLeft) {\n            var mHalfWidth = mWidth / 2;\n            var teHalf = teWidth / 2;\n            var mHLeft = (teLeft + teHalf) - mHalfWidth;\n            mHLeft = (mHLeft < mHalfWidth) ? teLeft : mHLeft;\n            return mHLeft;\n        };\n        ContextualHost.prototype._calcTop = function (mHeight, teHeight, teTop) {\n            var mHalfWidth = mHeight / 2;\n            var teHalf = teHeight / 2;\n            var mHLeft = (teTop + teHalf) - mHalfWidth;\n            mHLeft = (mHLeft < mHalfWidth) ? teTop : mHLeft;\n            return mHLeft;\n        };\n        ContextualHost.prototype._setPosition = function (curDirection) {\n            var teBR = this._targetElement.getBoundingClientRect();\n            var teLeft = teBR.left;\n            var teRight = teBR.right;\n            var teTop = teBR.top;\n            var teWidth = teBR.width;\n            var teHeight = teBR.height;\n            var mHLeft;\n            var mHTop;\n            var mWidth = "";\n            var arrowTop;\n            var arrowLeft;\n            var windowX = window.scrollX ? window.scrollX : 0;\n            var windowY = window.scrollY ? window.scrollY : 0;\n            var arrowSpace = (this._hasArrow) ? ARROW_SIZE : 0;\n            if (this._matchTargetWidth) {\n                mWidth = "width: " + this._modalWidth + "px;";\n            }\n            switch (curDirection) {\n                case "left":\n                    mHLeft = teLeft - this._modalWidth - arrowSpace;\n                    mHTop = this._calcTop(this._modalHeight, teHeight, teTop);\n                    mHTop += window.scrollY ? window.scrollY : 0;\n                    this._container.setAttribute("style", "top: " + mHTop + "px; left: " + mHLeft + "px;" + mWidth);\n                    this._container.classList.add(MODAL_STATE_POSITIONED);\n                    if (this._hasArrow) {\n                        this._container.classList.add(ARROW_RIGHT_CLASS);\n                        arrowTop = ((teTop + windowY) - mHTop) + ARROW_OFFSET;\n                        this._arrow.setAttribute("style", "top: " + arrowTop + "px;");\n                    }\n                    break;\n                case "right":\n                    mHTop = this._calcTop(this._modalHeight, teHeight, teTop);\n                    mHTop += windowY;\n                    mHLeft = teRight + arrowSpace;\n                    this._container.setAttribute("style", "top: " + mHTop + "px; left: " + mHLeft + "px;" + mWidth);\n                    this._container.classList.add(MODAL_STATE_POSITIONED);\n                    if (this._hasArrow) {\n                        arrowTop = ((windowY + teTop) - mHTop) + ARROW_OFFSET;\n                        this._arrow.setAttribute("style", "top: " + arrowTop + "px;");\n                        this._container.classList.add(ARROW_LEFT_CLASS);\n                    }\n                    break;\n                case "top":\n                    mHLeft = this._calcLeft(this._modalWidth, this._teWidth, teLeft);\n                    mHTop = teTop - this._modalHeight - arrowSpace;\n                    mHTop += windowY;\n                    this._container.setAttribute("style", "top: " + mHTop + "px; left: " + mHLeft + "px;" + mWidth);\n                    this._container.classList.add(MODAL_STATE_POSITIONED);\n                    if (this._hasArrow) {\n                        arrowTop = this._modalHeight - (arrowSpace / 2);\n                        arrowLeft = Math.max(windowX + teLeft - mHLeft + ((teWidth - arrowSpace) / 2), ARROW_OFFSET);\n                        this._arrow.setAttribute("style", "top: " + arrowTop + "px; left: " + arrowLeft + "px;");\n                        this._container.classList.add(ARROW_BOTTOM_CLASS);\n                    }\n                    break;\n                case "bottom":\n                    mHLeft = mHLeft = this._calcLeft(this._modalWidth, this._teWidth, teLeft);\n                    mHTop = teTop + teHeight + arrowSpace;\n                    mHTop += window.scrollY ? window.scrollY : 0;\n                    this._container.setAttribute("style", "top: " + mHTop + "px; left: " + mHLeft + "px;" + mWidth);\n                    this._container.classList.add(MODAL_STATE_POSITIONED);\n                    if (this._hasArrow) {\n                        arrowLeft = Math.max(windowX + teLeft - mHLeft + ((teWidth - arrowSpace) / 2), ARROW_OFFSET);\n                        this._arrow.setAttribute("style", "left: " + arrowLeft + "px;");\n                        this._container.classList.add(ARROW_TOP_CLASS);\n                    }\n                    break;\n                default:\n                    this._container.setAttribute("style", "top: 50%; left: 50%; transform: translateX(-50%) translateY(-50%);");\n            }\n        };\n        ContextualHost.prototype._tryPosModalLeft = function () {\n            var teLeft = this._targetElement.getBoundingClientRect().left;\n            if (teLeft < this._modalWidth) {\n                return false;\n            }\n            else {\n                return "left";\n            }\n        };\n        ContextualHost.prototype._tryPosModalRight = function () {\n            var teRight = this._targetElement.getBoundingClientRect().right;\n            var w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n            if ((w - teRight) < this._modalWidth) {\n                return false;\n            }\n            else {\n                return "right";\n            }\n        };\n        ContextualHost.prototype._tryPosModalBottom = function () {\n            var teBottom = window.innerHeight - this._targetElement.getBoundingClientRect().bottom;\n            if (teBottom < this._modalHeight) {\n                return false;\n            }\n            else {\n                return "bottom";\n            }\n        };\n        ContextualHost.prototype._tryPosModalTop = function () {\n            var teTop = this._targetElement.getBoundingClientRect().top;\n            if (teTop < this._modalHeight) {\n                return false;\n            }\n            else {\n                return "top";\n            }\n        };\n        ContextualHost.prototype._copyModalToBody = function () {\n            document.body.appendChild(this._container);\n        };\n        ContextualHost.prototype._saveModalSize = function () {\n            var _modalStyles = window.getComputedStyle(this._container);\n            this._container.setAttribute("style", "opacity: 0; z-index: -1");\n            this._container.classList.add(MODAL_STATE_POSITIONED);\n            this._container.classList.add(CONTEXT_STATE_CLASS);\n            if (this._matchTargetWidth) {\n                var teStyles = window.getComputedStyle(this._targetElement);\n                this._modalWidth = this._targetElement.getBoundingClientRect().width\n                    + (parseInt(teStyles.marginLeft, 10)\n                        + parseInt(teStyles.marginLeft, 10));\n            }\n            else {\n                this._modalWidth = this._container.getBoundingClientRect().width\n                    + (parseInt(_modalStyles.marginLeft, 10)\n                        + parseInt(_modalStyles.marginRight, 10));\n                this._container.setAttribute("style", "");\n            }\n            this._modalHeight = this._container.getBoundingClientRect().height\n                + (parseInt(_modalStyles.marginTop, 10)\n                    + parseInt(_modalStyles.marginBottom, 10));\n            this._container.classList.remove(MODAL_STATE_POSITIONED);\n            this._container.classList.remove(CONTEXT_STATE_CLASS);\n            this._teWidth = this._targetElement.getBoundingClientRect().width;\n            this._teHeight = this._targetElement.getBoundingClientRect().height;\n        };\n        ContextualHost.prototype._dismissAction = function (e) {\n            // If the element clicked is not INSIDE of contextualHost then close contextualHost\n            if (!this._container.contains(e.target) && e.target !== this._container) {\n                if (this._children !== undefined) {\n                    var isChild_1 = false;\n                    this._children.map(function (child) {\n                        if (child !== undefined) {\n                            isChild_1 = child.contains(e.target);\n                        }\n                    });\n                    if (!isChild_1) {\n                        this.disposeModal();\n                    }\n                }\n                else {\n                    this.disposeModal();\n                }\n            }\n        };\n        ContextualHost.prototype._setDismissClick = function () {\n            document.addEventListener("click", this._dismissAction, true);\n            document.addEventListener("keyup", this._handleKeyUpDismiss, true);\n        };\n        ContextualHost.prototype._handleKeyUpDismiss = function (e) {\n            if (e.keyCode === 32 || e.keyCode === 27) {\n                this._dismissAction(e);\n            }\n        };\n        ContextualHost.prototype._resizeAction = function () {\n            this.disposeModal();\n        };\n        ContextualHost.prototype._setResizeDisposal = function () {\n            window.addEventListener("resize", this._resizeAction, false);\n        };\n        return ContextualHost;\n    }());\n    fabric.ContextualHost = ContextualHost;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/// <reference path="../Button/Button.ts"/>\n/// <reference path="../Button/IButton.ts"/>\n/**\n * Callout\n *\n * Add callouts to things and stuff\n *\n */\n/// <reference path="../ContextualHost/ContextualHost.ts"/>\nvar STATE_HIDDEN = "is-hidden";\nvar CLOSE_BUTTON_CLASS = ".ms-Callout-close";\nvar MODIFIER_OOBE_CLASS = "ms-Callout--OOBE";\nvar fabric;\n(function (fabric) {\n    "use strict";\n    var Callout = (function () {\n        function Callout(container, addTarget, position) {\n            this._container = container;\n            this._addTarget = addTarget;\n            this._position = position;\n            this._closeButton = document.querySelector(CLOSE_BUTTON_CLASS);\n            this._setOpener();\n        }\n        Callout.prototype._setOpener = function () {\n            this._addTarget.addEventListener("click", this._clickHandler.bind(this), true);\n        };\n        Callout.prototype._openContextMenu = function () {\n            var modifiers = [];\n            if (this._hasModifier(MODIFIER_OOBE_CLASS)) {\n                modifiers.push("primaryArrow");\n            }\n            this._container.classList.remove(STATE_HIDDEN);\n            this._contextualHost = new fabric.ContextualHost(this._container, this._position, this._addTarget, true, modifiers);\n            if (this._closeButton) {\n                this._closeButton.addEventListener("click", this._closeHandler.bind(this), false);\n            }\n        };\n        Callout.prototype._hasModifier = function (modifierClass) {\n            return this._container.classList.contains(modifierClass);\n        };\n        Callout.prototype._closeHandler = function (e) {\n            this._contextualHost.disposeModal();\n            this._closeButton.removeEventListener("click", this._closeHandler.bind(this), false);\n            this._addTarget.removeEventListener("click", this._clickHandler.bind(this), true);\n        };\n        Callout.prototype._clickHandler = function (e) {\n            this._openContextMenu();\n        };\n        return Callout;\n    }());\n    fabric.Callout = Callout;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n"use strict";\nvar fabric;\n(function (fabric) {\n    /**\n     * CheckBox Plugin\n     *\n     * Adds basic demonstration functionality to .ms-CheckBox components.\n     *\n     */\n    var CheckBox = (function () {\n        /**\n         *\n         * @param {HTMLElement} container - the target container for an instance of CheckBox\n         * @constructor\n         */\n        function CheckBox(container) {\n            this._container = container;\n            this._choiceField = this._container.querySelector(".ms-CheckBox-field");\n            this._choiceInput = this._container.querySelector(".ms-CheckBox-input");\n            if (this._choiceInput.checked) {\n                this._choiceField.setAttribute("aria-checked", "true");\n            }\n            if (this._choiceField.getAttribute("aria-checked") === "true") {\n                this._choiceField.classList.add("is-checked");\n            }\n            this._addListeners();\n        }\n        CheckBox.prototype.getValue = function () {\n            return this._choiceField.getAttribute("aria-checked") === "true" ? true : false;\n        };\n        CheckBox.prototype.toggle = function () {\n            if (this.getValue()) {\n                this.unCheck();\n            }\n            else {\n                this.check();\n            }\n            this._choiceInput.click();\n        };\n        CheckBox.prototype.check = function () {\n            this._choiceField.setAttribute("aria-checked", "true");\n            this._choiceField.classList.add("is-checked");\n        };\n        CheckBox.prototype.unCheck = function () {\n            this._choiceField.setAttribute("aria-checked", "false");\n            this._choiceField.classList.remove("is-checked");\n        };\n        CheckBox.prototype.removeListeners = function () {\n            this._choiceField.removeEventListener("focus", this._FocusHandler.bind(this));\n            this._choiceField.removeEventListener("blur", this._BlurHandler.bind(this));\n            this._choiceField.removeEventListener("click", this._ClickHandler.bind(this));\n            this._choiceField.removeEventListener("keydown", this._KeydownHandler.bind(this));\n        };\n        CheckBox.prototype._addListeners = function (events) {\n            var ignore = events && events.ignore;\n            if (!ignore || !(ignore.indexOf("focus") > -1)) {\n                this._choiceField.addEventListener("focus", this._FocusHandler.bind(this), false);\n            }\n            if (!ignore || !(ignore.indexOf("blur") > -1)) {\n                this._choiceField.addEventListener("blur", this._BlurHandler.bind(this), false);\n            }\n            if (!ignore || !(ignore.indexOf("click") > -1)) {\n                this._choiceField.addEventListener("click", this._ClickHandler.bind(this), false);\n            }\n            if (!ignore || !(ignore.indexOf("keydown") > -1)) {\n                this._choiceField.addEventListener("keydown", this._KeydownHandler.bind(this), false);\n            }\n        };\n        CheckBox.prototype._FocusHandler = function () {\n            this._choiceField.classList.add("in-focus");\n        };\n        CheckBox.prototype._BlurHandler = function () {\n            this._choiceField.classList.remove("in-focus");\n        };\n        CheckBox.prototype._ClickHandler = function (event) {\n            event.stopPropagation();\n            event.preventDefault();\n            if (!this._choiceField.classList.contains("is-disabled")) {\n                this.toggle();\n            }\n        };\n        CheckBox.prototype._KeydownHandler = function (event) {\n            if (event.keyCode === 32) {\n                event.stopPropagation();\n                event.preventDefault();\n                if (!this._choiceField.classList.contains("is-disabled")) {\n                    this.toggle();\n                }\n            }\n        };\n        return CheckBox;\n    }());\n    fabric.CheckBox = CheckBox;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/// <reference path="../CheckBox/CheckBox.ts"/>\n"use strict";\nvar fabric;\n(function (fabric) {\n    /**\n     * RadioButton Plugin\n     *\n     * Adds basic demonstration functionality to .ms-RadioButton components.\n     *\n     */\n    var RadioButton = (function () {\n        /**\n         *\n         * @param {HTMLElement} container - the target container for an instance of RadioButton\n         * @constructor\n         */\n        function RadioButton(container) {\n            this._container = container;\n            this._choiceField = this._container.querySelector(".ms-RadioButton-field");\n            this._choiceInput = this._container.querySelector(".ms-RadioButton-input");\n            if (this._choiceField.getAttribute("aria-checked") === "true") {\n                this._choiceField.classList.add("is-checked");\n            }\n            this._addListeners();\n        }\n        RadioButton.prototype.getValue = function () {\n            return this._choiceField.getAttribute("aria-checked") === "true" ? true : false;\n        };\n        RadioButton.prototype.toggle = function () {\n            if (this.getValue()) {\n                this.unCheck();\n            }\n            else {\n                this.check();\n            }\n        };\n        RadioButton.prototype.check = function () {\n            this._choiceField.setAttribute("aria-checked", "true");\n            this._choiceField.classList.add("is-checked");\n            this._choiceInput.checked = true;\n        };\n        RadioButton.prototype.unCheck = function () {\n            this._choiceField.setAttribute("aria-checked", "false");\n            this._choiceField.classList.remove("is-checked");\n            this._choiceInput.checked = false;\n        };\n        RadioButton.prototype.removeListeners = function () {\n            this._choiceField.removeEventListener("focus", this._FocusHandler.bind(this));\n            this._choiceField.removeEventListener("blur", this._BlurHandler.bind(this));\n            this._choiceField.removeEventListener("click", this._RadioClickHandler.bind(this));\n            this._choiceField.addEventListener("keydown", this._RadioKeydownHandler.bind(this));\n        };\n        RadioButton.prototype._addListeners = function () {\n            this._choiceField.addEventListener("focus", this._FocusHandler.bind(this), false);\n            this._choiceField.addEventListener("blur", this._BlurHandler.bind(this), false);\n            this._choiceField.addEventListener("click", this._RadioClickHandler.bind(this), false);\n            this._choiceField.addEventListener("keydown", this._RadioKeydownHandler.bind(this), false);\n        };\n        RadioButton.prototype._RadioClickHandler = function (event) {\n            event.stopPropagation();\n            event.preventDefault();\n            if (!this._choiceField.classList.contains("is-disabled")) {\n                this._dispatchSelectEvent();\n            }\n        };\n        RadioButton.prototype._dispatchSelectEvent = function () {\n            var objDict = {\n                bubbles: true,\n                cancelable: true,\n                detail: {\n                    name: this._choiceField.getAttribute("name"),\n                    item: this\n                }\n            };\n            this._choiceField.dispatchEvent(new CustomEvent("msChoicefield", objDict));\n        };\n        RadioButton.prototype._RadioKeydownHandler = function (event) {\n            if (event.keyCode === 32) {\n                event.stopPropagation();\n                event.preventDefault();\n                if (!this._choiceField.classList.contains("is-disabled")) {\n                    this._dispatchSelectEvent();\n                }\n            }\n        };\n        RadioButton.prototype._FocusHandler = function () {\n            this._choiceField.classList.add("in-focus");\n        };\n        RadioButton.prototype._BlurHandler = function () {\n            this._choiceField.classList.remove("in-focus");\n        };\n        return RadioButton;\n    }());\n    fabric.RadioButton = RadioButton;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/// <reference path="../RadioButton/RadioButton.ts"/>\n"use strict";\nvar fabric;\n(function (fabric) {\n    /**\n     * ChoiceFieldGroup Plugin\n     *\n     * Adds basic demonstration functionality to .ms-ChoiceFieldGroup components.\n     *\n    */\n    var ChoiceFieldGroup = (function () {\n        /**\n         *\n         * @param {HTMLElement} container - the target container for an instance of ChoiceFieldGroup\n         * @constructor\n         */\n        function ChoiceFieldGroup(container) {\n            this._choiceFieldGroup = container;\n            this._choiceFieldComponents = [];\n            this._initalSetup();\n            this._addListeners();\n        }\n        ChoiceFieldGroup.prototype.removeListeners = function () {\n            this._choiceFieldGroup.removeEventListener("msChoicefield", this._ChoiceFieldHandler.bind(this));\n        };\n        ChoiceFieldGroup.prototype._initalSetup = function () {\n            var choiceFieldElements = this._choiceFieldGroup.querySelectorAll(".ms-RadioButton");\n            for (var i = 0; i < choiceFieldElements.length; i++) {\n                this._choiceFieldComponents[i] = new fabric.RadioButton(choiceFieldElements[i]);\n            }\n        };\n        ChoiceFieldGroup.prototype._addListeners = function () {\n            document.addEventListener("msChoicefield", this._ChoiceFieldHandler.bind(this), false);\n        };\n        ChoiceFieldGroup.prototype._ChoiceFieldHandler = function (event) {\n            var name = event.detail.name;\n            var selectedChoice = event.detail.item;\n            if (this._choiceFieldGroup.id === name) {\n                for (var i = 0; i < this._choiceFieldComponents.length; i++) {\n                    this._choiceFieldComponents[i].unCheck();\n                }\n                selectedChoice.check();\n            }\n        };\n        return ChoiceFieldGroup;\n    }());\n    fabric.ChoiceFieldGroup = ChoiceFieldGroup;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/**\n * SearchBox component\n *\n * Allows you to search the world.\n *\n */\n/**\n * @namespace fabric\n */\nvar fabric;\n(function (fabric) {\n    /**\n     *\n     * @param {HTMLElement} container - the target container for an instance of SearchBox\n     * @constructor\n     *\n     */\n    var SB_FIELD = ".ms-SearchBox-field";\n    var SB_CLEAR_BUTTON = ".ms-SearchBox-clear";\n    var SB_EXIT_BUTTON = ".ms-SearchBox-exit";\n    var SB_HAS_TEXT = "has-text";\n    var SB_IS_ACTIVE = "is-active";\n    var SB_IS_ANIMATED = "is-animated";\n    var SearchBox = (function () {\n        function SearchBox(container) {\n            var _this = this;\n            this._container = container;\n            this._saveDOMRefs(this._container);\n            this._boundExpandSearchHandler = this._expandSearchHandler.bind(this);\n            this._boundEnableClose = this._enableClose.bind(this);\n            this._boundCollapseSearchBox = this._collapseSearchBox.bind(this);\n            this._boundClearSearchBox = this._clearSearchBox.bind(this);\n            this._boundHandleBlur = this._handleBlur.bind(this);\n            this._boundExitSearchBox = this._exitSearchBox.bind(this);\n            this._setHasText();\n            this._setFocusAction(this._container);\n            this._setClearButtonAction();\n            this._setBlurAction();\n            this._clearOnly = false;\n            setTimeout(function () {\n                _this._checkState();\n                _this._addAnimation();\n            }, 10);\n        }\n        SearchBox.prototype.setCollapsedListeners = function () {\n            this._disposeListeners();\n            this._searchBox.addEventListener("click", this._boundExpandSearchHandler, false);\n            this._searchBoxField.addEventListener("focus", this._boundExpandSearchHandler, true);\n        };\n        SearchBox.prototype.getInputField = function () {\n            return this._searchBoxField;\n        };\n        SearchBox.prototype._saveDOMRefs = function (context) {\n            this._searchBox = context;\n            this._searchBoxField = this._searchBox.querySelector(SB_FIELD);\n            this._searchBoxClearButton = this._searchBox.querySelector(SB_CLEAR_BUTTON);\n            this._searchBoxExitButton = this._searchBox.querySelector(SB_EXIT_BUTTON);\n        };\n        SearchBox.prototype._disposeListeners = function () {\n            this._searchBox.removeEventListener("click", this._boundExpandSearchHandler);\n            this._searchBoxField.removeEventListener("focus", this._boundExpandSearchHandler);\n        };\n        SearchBox.prototype._exitSearchBox = function (event) {\n            event.stopPropagation();\n            event.target.blur();\n            this._clearSearchBox();\n            this._collapseSearchBox();\n            this._searchBox.removeEventListener("keyup", this._boundEnableClose);\n            this.setCollapsedListeners();\n        };\n        SearchBox.prototype._collapseSearchBox = function () {\n            this._searchBox.classList.remove("is-active");\n            var event = document.createEvent("Event");\n            event.initEvent("searchCollapse", true, true);\n            this._searchBoxField.dispatchEvent(event);\n        };\n        SearchBox.prototype._expandSearchHandler = function () {\n            this._disposeListeners();\n            this._searchBox.classList.add("is-active");\n            this._searchBoxField.focus();\n        };\n        SearchBox.prototype._enableClose = function () {\n            this._setHasText();\n        };\n        SearchBox.prototype._setHasText = function () {\n            if (this._searchBoxField.value.length > 0) {\n                this._searchBox.classList.add(SB_HAS_TEXT);\n            }\n            else {\n                this._searchBox.classList.remove(SB_HAS_TEXT);\n            }\n        };\n        SearchBox.prototype._setFocusAction = function (context) {\n            var _this = this;\n            this._searchBoxField.addEventListener("focus", function () {\n                _this._setHasText();\n                _this._searchBox.addEventListener("keyup", _this._boundEnableClose, false);\n                _this._searchBox.classList.add(SB_IS_ACTIVE);\n                _this._searchBox.classList.add(SB_IS_ACTIVE);\n            }, true);\n        };\n        SearchBox.prototype._clearSearchBox = function (event) {\n            var _this = this;\n            this._clearOnly = true;\n            this._searchBoxField.value = "";\n            this._setHasText();\n            setTimeout(function () {\n                _this._clearOnly = false;\n            }, 10);\n        };\n        SearchBox.prototype._setClearButtonAction = function () {\n            var _this = this;\n            if (this._searchBoxExitButton) {\n                this._searchBoxExitButton.addEventListener("click", this._boundExitSearchBox, false);\n            }\n            this._searchBoxClearButton.addEventListener("mousedown", this._boundClearSearchBox, false);\n            this._searchBoxClearButton.addEventListener("keydown", function (e) {\n                var keyCode = e.keyCode;\n                if (keyCode === 13) {\n                    _this._clearSearchBox(e);\n                }\n            }, false);\n        };\n        SearchBox.prototype._handleBlur = function (event) {\n            var _this = this;\n            if (!this._clearOnly) {\n                this._searchBox.removeEventListener("keyup", this._boundEnableClose);\n                setTimeout(function () {\n                    if (!_this._searchBox.contains(document.activeElement)) {\n                        _this._clearSearchBox();\n                        _this._collapseSearchBox();\n                        _this.setCollapsedListeners();\n                    }\n                }, 10);\n            }\n            else {\n                this._searchBoxField.focus();\n            }\n            this._clearOnly = false;\n        };\n        SearchBox.prototype._setBlurAction = function () {\n            this._searchBoxField.addEventListener("blur", this._boundHandleBlur, true);\n            this._searchBoxClearButton.addEventListener("blur", this._boundHandleBlur, true);\n        };\n        SearchBox.prototype._checkState = function () {\n            if (this._searchBox.classList.contains("is-collapsed")) {\n                this.setCollapsedListeners();\n            }\n        };\n        SearchBox.prototype._addAnimation = function () {\n            this._container.classList.add(SB_IS_ANIMATED);\n        };\n        return SearchBox;\n    }());\n    fabric.SearchBox = SearchBox;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/// <reference path="../ContextualHost/ContextualHost.ts"/>\n/**\n * CommandButton\n *\n * Buttons used primarily in the command bar\n *\n */\n/**\n * @namespace fabric\n */\nvar fabric;\n(function (fabric) {\n    /**\n     *\n     * @constructor\n     */\n    var CONTEXT_CLASS = ".ms-ContextualMenu";\n    var CB_SPLIT_CLASS = ".ms-CommandButton-splitIcon";\n    var CB_BUTTON_CLASS = ".ms-CommandButton-button";\n    var MODAL_POSITION = "bottom";\n    var CommandButton = (function () {\n        function CommandButton(container, contextMenu) {\n            this._container = container;\n            this._command = this._container;\n            this._commandButton = this._command.querySelector(CB_BUTTON_CLASS);\n            this._splitButton = this._command.querySelector(CB_SPLIT_CLASS);\n            if (contextMenu) {\n                this._contextualMenu = contextMenu;\n            }\n            else {\n                this._contextualMenu = this._container.querySelector(CONTEXT_CLASS);\n            }\n            this._checkForMenu();\n        }\n        CommandButton.prototype._createModalHostView = function () {\n            this._modalHostView = new fabric.ContextualHost(this._contextualMenu, MODAL_POSITION, this._command, false);\n        };\n        CommandButton.prototype._setClick = function () {\n            if (this._splitButton) {\n                this._splitButton.addEventListener("click", this._createModalHostView.bind(this), false);\n            }\n            else {\n                this._commandButton.addEventListener("click", this._createModalHostView.bind(this), false);\n            }\n        };\n        CommandButton.prototype._checkForMenu = function () {\n            if (this._contextualMenu) {\n                this._setClick();\n            }\n        };\n        return CommandButton;\n    }());\n    fabric.CommandButton = CommandButton;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/// <reference path="../SearchBox/SearchBox.ts"/>\n/// <reference path="../CommandButton/CommandButton.ts"/>\n/// <reference path="../ContextualHost/ContextualHost.ts"/>\n/**\n * CommandBar\n *\n * Commanding and navigational surface\n *\n */\nvar fabric;\n(function (fabric) {\n    "use strict";\n    var CONTEXTUAL_MENU = ".ms-ContextualMenu";\n    var CONTEXTUAL_MENU_ITEM = ".ms-ContextualMenu-item";\n    var CONTEXTUAL_MENU_LINK = ".ms-ContextualMenu-link";\n    var CB_SEARCH_BOX = ".ms-SearchBox";\n    var CB_MAIN_AREA = ".ms-CommandBar-mainArea";\n    var CB_SIDE_COMMAND_AREA = ".ms-CommandBar-sideCommands";\n    var CB_ITEM_OVERFLOW = ".ms-CommandBar-overflowButton";\n    var CB_NO_LABEL_CLASS = "ms-CommandButton--noLabel";\n    var SEARCH_BOX_CLOSE = ".ms-SearchBox-closeField";\n    var COMMAND_BUTTON = ".ms-CommandButton";\n    var COMMAND_BUTTON_LABEL = ".ms-CommandButton-label";\n    var ICON = ".ms-Icon";\n    var OVERFLOW_WIDTH = 40;\n    var OVERFLOW_LEFT_RIGHT_PADDING = 30;\n    var CommandBar = (function () {\n        function CommandBar(container) {\n            this.responsiveSizes = {\n                "sm-min": 320,\n                "md-min": 480,\n                "lg-min": 640,\n                "xl-min": 1024,\n                "xxl-min": 1366,\n                "xxxl-min": 1920\n            };\n            this.visibleCommands = [];\n            this.commandWidths = [];\n            this.overflowCommands = [];\n            this.itemCollection = [];\n            this._sideAreaCollection = [];\n            this.breakpoint = "sm";\n            this._container = container;\n            this.responsiveSizes["sm-max"] = this.responsiveSizes["md-min"] - 1;\n            this.responsiveSizes["md-max"] = this.responsiveSizes["lg-min"] - 1;\n            this.responsiveSizes["lg-max"] = this.responsiveSizes["xl-min"] - 1;\n            this.responsiveSizes["xl-max"] = this.responsiveSizes["xxl-min"] - 1;\n            this.responsiveSizes["xxl-max"] = this.responsiveSizes["xxxl-min"] - 1;\n            this._setElements();\n            this._setBreakpoint();\n            // If the overflow exists then run the overflow resizing\n            if (this._elements.overflowCommand) {\n                this._initOverflow();\n            }\n            this._setUIState();\n        }\n        CommandBar.prototype._runsSearchBox = function (state) {\n            if (state === void 0) { state = "add"; }\n            this._changeSearchState("is-collapsed", state);\n        };\n        CommandBar.prototype._runOverflow = function () {\n            if (this._elements.overflowCommand) {\n                this._saveCommandWidths();\n                this._redrawMenu();\n                this._updateCommands();\n                this._drawCommands();\n                this._checkOverflow();\n            }\n        };\n        CommandBar.prototype._initOverflow = function () {\n            this._createContextualRef();\n            this._createItemCollection(this.itemCollection, CB_MAIN_AREA);\n            this._createItemCollection(this._sideAreaCollection, CB_SIDE_COMMAND_AREA);\n            this._saveCommandWidths();\n            this._updateCommands();\n            this._drawCommands();\n            this._setWindowEvent();\n            this._checkOverflow();\n        };\n        CommandBar.prototype._hasClass = function (element, cls) {\n            return (" " + element.className + " ").indexOf(" " + cls + " ") > -1;\n        };\n        CommandBar.prototype._onSearchExpand = function () {\n            if (this.breakpoint === "lg") {\n                this._container.classList.add("search-expanded");\n                this._doResize();\n            }\n        };\n        CommandBar.prototype._onSearchCollapse = function () {\n            if (this.breakpoint === "lg") {\n                this._container.classList.remove("search-expanded");\n                this._doResize();\n            }\n        };\n        CommandBar.prototype._getScreenSize = function () {\n            // First we need to set what the screen is doing, check screen size\n            var w = window;\n            var wSize = {\n                x: 0,\n                y: 0\n            };\n            var d = document, e = d.documentElement, g = d.getElementsByTagName("body")[0];\n            wSize.x = w.innerWidth || e.clientWidth || g.clientWidth;\n            wSize.y = w.innerHeight || e.clientHeight || g.clientHeight;\n            return wSize;\n        };\n        CommandBar.prototype._setBreakpoint = function () {\n            var screenSize = this._getScreenSize().x;\n            switch (true) {\n                case (screenSize <= this.responsiveSizes["sm-max"]):\n                    this.breakpoint = "sm";\n                    break;\n                case (screenSize >= this.responsiveSizes["md-min"] && screenSize <= this.responsiveSizes["md-max"]):\n                    this.breakpoint = "md";\n                    break;\n                case (screenSize >= this.responsiveSizes["lg-min"] && screenSize <= this.responsiveSizes["lg-max"]):\n                    this.breakpoint = "lg";\n                    break;\n                case (screenSize >= this.responsiveSizes["xl-min"] && screenSize <= this.responsiveSizes["xl-max"]):\n                    this.breakpoint = "xl";\n                    break;\n                case (screenSize >= this.responsiveSizes["xxl-min"] && screenSize <= this.responsiveSizes["xxl-max"]):\n                    this.breakpoint = "xxl";\n                    break;\n                case (screenSize >= this.responsiveSizes["xxxl-min"]):\n                    this.breakpoint = "xxxl";\n                    break;\n            }\n        };\n        CommandBar.prototype._createSearchInstance = function () {\n            if (this._elements.searchBox) {\n                return new fabric.SearchBox(this._elements.searchBox);\n            }\n            else {\n                return false;\n            }\n        };\n        CommandBar.prototype._changeSearchState = function (state, action) {\n            if (this._elements.searchBox) {\n                switch (action) {\n                    case "remove":\n                        this._elements.searchBox.classList.remove(state);\n                        break;\n                    case "add":\n                        this._elements.searchBox.classList.add(state);\n                        break;\n                    default:\n                        break;\n                }\n            }\n        };\n        CommandBar.prototype._setElements = function () {\n            var _this = this;\n            this._elements = {\n                mainArea: this._container.querySelector(CB_MAIN_AREA)\n            };\n            if (this._container.querySelector(CB_SIDE_COMMAND_AREA)) {\n                this._elements.sideCommandArea = this._container.querySelector(CB_SIDE_COMMAND_AREA);\n            }\n            if (this._container.querySelector(CB_ITEM_OVERFLOW)) {\n                this._elements.overflowCommand = this._container.querySelector(CB_ITEM_OVERFLOW);\n                this._elements.contextMenu = this._container.querySelector(CB_ITEM_OVERFLOW).querySelector(CONTEXTUAL_MENU);\n            }\n            if (this._container.querySelector(CB_MAIN_AREA + " " + CB_SEARCH_BOX)) {\n                this._elements.searchBox = this._container.querySelector(CB_MAIN_AREA + " " + CB_SEARCH_BOX);\n                this._elements.searchBoxClose = this._container.querySelector(SEARCH_BOX_CLOSE);\n                this.searchBoxInstance = this._createSearchInstance();\n                this.searchBoxInstance.getInputField().addEventListener("focus", function () { _this._onSearchExpand(); }, false);\n                this.searchBoxInstance.getInputField().addEventListener("searchCollapse", function () { _this._onSearchCollapse(); }, false);\n            }\n        };\n        CommandBar.prototype._createItemCollection = function (iCollection, areaClass) {\n            var item, label, iconClasses, splitClasses, items = this._container.querySelectorAll(areaClass + " > " + COMMAND_BUTTON + ":not(" + CB_ITEM_OVERFLOW + ")");\n            // Initiate the overflow command\n            this._commandButtonInstance = new fabric.CommandButton(this._elements.overflowCommand);\n            for (var i = 0; i < items.length; i++) {\n                item = items[i];\n                label = item.querySelector(COMMAND_BUTTON_LABEL).textContent;\n                var icon = item.querySelector(ICON);\n                if (icon) {\n                    iconClasses = icon.className;\n                    splitClasses = iconClasses.split(" ");\n                    for (var o = 0; o < splitClasses.length; o++) {\n                        if (splitClasses[o].indexOf(ICON.replace(".", "") + "--") > -1) {\n                            icon = splitClasses[o];\n                            break;\n                        }\n                    }\n                }\n                iCollection.push({\n                    item: item,\n                    label: label,\n                    icon: icon,\n                    isCollapsed: (item.classList.contains(CB_NO_LABEL_CLASS)) ? true : false,\n                    commandButtonRef: new fabric.CommandButton(item)\n                });\n            }\n            return;\n        };\n        CommandBar.prototype._createContextualRef = function () {\n            this.contextualItemContainerRef = this._elements.contextMenu.querySelector(CONTEXTUAL_MENU_ITEM).cloneNode(true);\n            this.contextualItemLink = this._elements.contextMenu.querySelector(CONTEXTUAL_MENU_LINK).cloneNode(false);\n            this.contextualItemIcon = this._elements.contextMenu.querySelector(".ms-Icon").cloneNode(false);\n            this._elements.contextMenu.innerHTML = "";\n        };\n        CommandBar.prototype._getElementWidth = function (element) {\n            var width, styles;\n            if (element.offsetParent === null) {\n                element.setAttribute("style", "position: absolute; opacity: 0; display: block;");\n            }\n            width = element.getBoundingClientRect().width;\n            styles = window.getComputedStyle(element);\n            width += parseInt(styles.marginLeft, 10) + parseInt(styles.marginRight, 10);\n            element.setAttribute("style", "");\n            return width;\n        };\n        CommandBar.prototype._saveCommandWidths = function () {\n            for (var i = 0; i < this.itemCollection.length; i++) {\n                var item = this.itemCollection[i].item;\n                var width = this._getElementWidth(item);\n                this.commandWidths[i] = width;\n            }\n        };\n        CommandBar.prototype._updateCommands = function () {\n            var searchCommandWidth = 0;\n            var mainAreaWidth = this._elements.mainArea.getBoundingClientRect().width;\n            if (this._elements.searchBox) {\n                searchCommandWidth = this._getElementWidth(this._elements.searchBox);\n            }\n            var offset = searchCommandWidth + OVERFLOW_WIDTH + OVERFLOW_LEFT_RIGHT_PADDING;\n            var totalAreaWidth = mainAreaWidth - offset; // Start with searchbox width\n            // Reset overflow and visible\n            this.visibleCommands = [];\n            this.overflowCommands = [];\n            var totalWidths = 0;\n            for (var i = 0; i < this.itemCollection.length; i++) {\n                totalWidths += this.commandWidths[i];\n                if (totalWidths < totalAreaWidth) {\n                    this.visibleCommands.push(this.itemCollection[i]);\n                }\n                else {\n                    this.overflowCommands.push(this.itemCollection[i]);\n                }\n            }\n        };\n        CommandBar.prototype._drawCommands = function () {\n            // Remove existing commands\n            this._elements.contextMenu.innerHTML = "";\n            for (var i = 0; i < this.overflowCommands.length; i++) {\n                this.overflowCommands[i].item.classList.add("is-hidden");\n                // Add all items to contextual menu.\n                var newCItem = this.contextualItemContainerRef.cloneNode(false);\n                var newClink = this.contextualItemLink.cloneNode(false);\n                var iconClass = this.overflowCommands[i].icon;\n                newClink.innerText = this.overflowCommands[i].label;\n                newCItem.appendChild(newClink);\n                if (iconClass) {\n                    var newIcon = this.contextualItemIcon.cloneNode(false);\n                    newIcon.className = ICON.replace(".", "") + " " + iconClass;\n                    newCItem.appendChild(newIcon);\n                }\n                this._elements.contextMenu.appendChild(newCItem);\n            }\n            // Show visible commands\n            for (var x = 0; x < this.visibleCommands.length; x++) {\n                this.visibleCommands[x].item.classList.remove("is-hidden");\n            }\n        };\n        CommandBar.prototype._setWindowEvent = function () {\n            var _this = this;\n            window.addEventListener("resize", function () {\n                _this._doResize();\n            }, false);\n        };\n        CommandBar.prototype._processCollapsedClasses = function (type) {\n            for (var i = 0; i < this.itemCollection.length; i++) {\n                var thisItem = this.itemCollection[i];\n                if (!thisItem.isCollapsed) {\n                    if (type === "add") {\n                        thisItem.item.classList.add(CB_NO_LABEL_CLASS);\n                    }\n                    else {\n                        thisItem.item.classList.remove(CB_NO_LABEL_CLASS);\n                    }\n                }\n            }\n            for (var i = 0; i < this._sideAreaCollection.length; i++) {\n                var thisItem = this._sideAreaCollection[i];\n                if (!thisItem.isCollapsed) {\n                    if (type === "add") {\n                        thisItem.item.classList.add(CB_NO_LABEL_CLASS);\n                    }\n                    else {\n                        thisItem.item.classList.remove(CB_NO_LABEL_CLASS);\n                    }\n                }\n            }\n        };\n        CommandBar.prototype._setUIState = function () {\n            switch (this.breakpoint) {\n                case "sm":\n                    this._runsSearchBox();\n                    this._processCollapsedClasses("add");\n                    this._runOverflow();\n                    break;\n                case "md":\n                    this._runsSearchBox();\n                    // Add collapsed classes to commands\n                    this._processCollapsedClasses("add");\n                    this._runOverflow();\n                    break;\n                case "lg":\n                    this._runsSearchBox();\n                    this._processCollapsedClasses("remove");\n                    this._runOverflow();\n                    break;\n                case "xl":\n                    this._runsSearchBox("remove");\n                    this._processCollapsedClasses("remove");\n                    this._runOverflow();\n                    break;\n                default:\n                    this._runsSearchBox("remove");\n                    this._processCollapsedClasses("remove");\n                    this._runOverflow();\n                    break;\n            }\n        };\n        CommandBar.prototype._checkOverflow = function () {\n            if (this.overflowCommands.length > 0) {\n                this._elements.overflowCommand.classList.remove("is-hidden");\n            }\n            else {\n                this._elements.overflowCommand.classList.add("is-hidden");\n                if (this.activeCommand === this._elements.overflowCommand) {\n                    this._elements.contextMenu.classList.remove("is-open");\n                }\n            }\n        };\n        CommandBar.prototype._redrawMenu = function () {\n            var left;\n            if (this._hasClass(this._elements.contextMenu, "is-open")) {\n                left = this.activeCommand.getBoundingClientRect().left;\n                this._drawOverflowMenu(left);\n            }\n        };\n        CommandBar.prototype._drawOverflowMenu = function (left) {\n            this._elements.contextMenu.setAttribute("style", "left: " + left + "px; transform: translateX(-50%)");\n        };\n        CommandBar.prototype._doResize = function () {\n            this._setBreakpoint();\n            this._setUIState();\n        };\n        return CommandBar;\n    }());\n    fabric.CommandBar = CommandBar;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/// <reference path="../ContextualHost/ContextualHost.ts"/>\n/// <reference path="../Button/Button.ts"/>\nvar fabric;\n(function (fabric) {\n    var MODAL_POSITION = "bottom";\n    var SUBMENU_POSITION = "right";\n    var ContextualMenu = (function () {\n        function ContextualMenu(container, hostTarget, position) {\n            this._container = container;\n            this._hostTarget = hostTarget;\n            this._position = position ? position : MODAL_POSITION;\n            this._isOpen = false;\n            this._setOpener(hostTarget);\n            this._init();\n        }\n        ContextualMenu.prototype.getHost = function () {\n            return this._host;\n        };\n        ContextualMenu.prototype._init = function () {\n            this._container.addEventListener("click", this._onContextualMenuClick.bind(this), true);\n            document.addEventListener("click", this._onDocumentClick.bind(this), false);\n        };\n        ContextualMenu.prototype._onDocumentClick = function (event) {\n            var target = event.target;\n            var classList = target.classList;\n            if (!this._hostTarget.contains(target) && !classList.contains("ms-ContextualMenu-link")) {\n                this._isOpen = false;\n            }\n        };\n        ContextualMenu.prototype._onContextualMenuClick = function (event) {\n            var target = event.target;\n            var classList = target.classList;\n            if (classList.contains("ms-ContextualMenu-link") && !classList.contains("is-disabled")) {\n                if (this._container.classList.contains("ms-ContextualMenu--multiselect")) {\n                    this._multiSelect(target);\n                }\n                else {\n                    this._singleSelect(target);\n                    if (!target.parentElement.classList.contains("ms-ContextualMenu-item--hasMenu")) {\n                        this._host.disposeModal();\n                        this._isOpen = false;\n                    }\n                }\n            }\n        };\n        ContextualMenu.prototype._multiSelect = function (target) {\n            if (target.classList.contains("is-selected")) {\n                target.classList.remove("is-selected");\n            }\n            else {\n                target.classList.add("is-selected");\n            }\n        };\n        ContextualMenu.prototype._singleSelect = function (target) {\n            var selecteds = this._container.querySelectorAll(".is-selected");\n            var i = selecteds.length;\n            while (i--) {\n                selecteds[i].classList.remove("is-selected");\n            }\n            target.classList.add("is-selected");\n        };\n        ContextualMenu.prototype._toggleMenu = function (event) {\n            (!this._isOpen) ? this._openContextMenu(event) : this._host.disposeModal();\n            this._isOpen = !this._isOpen;\n        };\n        ContextualMenu.prototype._setOpener = function (hostTarget) {\n            var _this = this;\n            hostTarget.addEventListener("click", function (event) {\n                event.preventDefault();\n                _this._toggleMenu(event);\n            });\n        };\n        ContextualMenu.prototype._openContextMenu = function (event) {\n            this._createModalHostView(this._container, this._position, this._hostTarget);\n            this._checkForSubmenus(this._container);\n        };\n        ContextualMenu.prototype._checkForSubmenus = function (container) {\n            var _this = this;\n            var submenus = container.querySelectorAll(".ms-ContextualMenu-item.ms-ContextualMenu-item--hasMenu");\n            var i = submenus.length;\n            if (submenus.length) {\n                var _loop_1 = function() {\n                    var button = submenus[i].querySelector(".ms-ContextualMenu-link");\n                    var menu = submenus[i].querySelector(".ms-ContextualMenu");\n                    if (menu) {\n                        var contextualMenu_1 = new fabric.ContextualMenu(menu, button, SUBMENU_POSITION);\n                        menu.addEventListener("hostAdded", function () {\n                            _this._host.setChildren(contextualMenu_1.getHost());\n                        });\n                    }\n                };\n                while (i--) {\n                    _loop_1();\n                }\n            }\n        };\n        ContextualMenu.prototype._createModalHostView = function (container, position, hostTarget) {\n            container.classList.remove("is-hidden");\n            this._host = new fabric.ContextualHost(container, position, hostTarget, false);\n            var event = document.createEvent("Event");\n            event.initEvent("hostAdded", true, true);\n            container.dispatchEvent(event);\n        };\n        return ContextualMenu;\n    }());\n    fabric.ContextualMenu = ContextualMenu;\n})(fabric || (fabric = {}));\n\n"use strict";\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n// @TODO - we can add this once jquery is removed\n// "use strict";\n/// <reference path="../../../typings/jquery.d.ts"/>\n/// <reference path="../../../typings/pickadate.d.ts"/>\nvar fabric;\n(function (fabric) {\n    /**\n     * DatePicker Plugin\n     */\n    var DatePicker = (function () {\n        function DatePicker(container, options) {\n            var _this = this;\n            /** Set up letiables and run the Pickadate plugin. */\n            var $datePicker = $(container);\n            var $dateField = $datePicker.find(".ms-TextField-field").pickadate($.extend({\n                // Strings and translations.\n                weekdaysShort: ["S", "M", "T", "W", "T", "F", "S"],\n                // Don\'t render the buttons\n                clear: "",\n                close: "",\n                today: "",\n                // Events\n                onStart: function () {\n                    _this.initCustomView($datePicker);\n                },\n                // Classes\n                klass: {\n                    // The element states\n                    input: "ms-DatePicker-input",\n                    active: "ms-DatePicker-input--active",\n                    // The root picker and states\n                    picker: "ms-DatePicker-picker",\n                    opened: "ms-DatePicker-picker--opened",\n                    focused: "ms-DatePicker-picker--focused",\n                    // The picker holder\n                    holder: "ms-DatePicker-holder",\n                    // The picker frame, wrapper, and box\n                    frame: "ms-DatePicker-frame",\n                    wrap: "ms-DatePicker-wrap",\n                    box: "ms-DatePicker-dayPicker",\n                    // The picker header\n                    header: "ms-DatePicker-header",\n                    // Month & year labels\n                    month: "ms-DatePicker-month",\n                    year: "ms-DatePicker-year",\n                    // Table of dates\n                    table: "ms-DatePicker-table",\n                    // Weekday labels\n                    weekdays: "ms-DatePicker-weekday",\n                    // Day states\n                    day: "ms-DatePicker-day",\n                    disabled: "ms-DatePicker-day--disabled",\n                    selected: "ms-DatePicker-day--selected",\n                    highlighted: "ms-DatePicker-day--highlighted",\n                    now: "ms-DatePicker-day--today",\n                    infocus: "ms-DatePicker-day--infocus",\n                    outfocus: "ms-DatePicker-day--outfocus"\n                }\n            }, options || {}));\n            var $picker = $dateField.pickadate("picker");\n            this.picker = $picker;\n            /** Respond to built-in picker events. */\n            $picker.on({\n                render: function () {\n                    _this.updateCustomView($datePicker);\n                }\n            });\n        }\n        /**\n         * After the Pickadate plugin starts, this function\n         * adds additional controls to the picker view.\n         */\n        DatePicker.prototype.initCustomView = function ($datePicker) {\n            var _this = this;\n            /** Get some letiables ready. */\n            var $monthControls = $datePicker.find(".ms-DatePicker-monthComponents");\n            var $goToday = $datePicker.find(".ms-DatePicker-goToday");\n            var $monthPicker = $datePicker.find(".ms-DatePicker-monthPicker");\n            var $yearPicker = $datePicker.find(".ms-DatePicker-yearPicker");\n            var $pickerWrapper = $datePicker.find(".ms-DatePicker-wrap");\n            var $picker = $datePicker.find(".ms-TextField-field").pickadate("picker");\n            /** Move the month picker into position. */\n            $monthControls.appendTo($pickerWrapper);\n            $goToday.appendTo($pickerWrapper);\n            $monthPicker.appendTo($pickerWrapper);\n            $yearPicker.appendTo($pickerWrapper);\n            /** Update the custom view. */\n            this.updateCustomView($datePicker);\n            /** dispatch click on document so anything listening can be notified */\n            $picker.on("open", function (e) {\n                var evt = document.createEvent("MouseEvents");\n                evt.initEvent("click", true, true);\n                document.dispatchEvent(evt);\n            });\n            /** Move back one month. */\n            $monthControls.on("click", ".js-prevMonth", function (event) {\n                event.preventDefault();\n                var newMonth = $picker.get("highlight").month - 1;\n                _this.changeHighlightedDate([null, newMonth, null]);\n            });\n            /** Move ahead one month. */\n            $monthControls.on("click", ".js-nextMonth", function (event) {\n                event.preventDefault();\n                var newMonth = $picker.get("highlight").month + 1;\n                _this.changeHighlightedDate([null, newMonth, null]);\n            });\n            /** Move back one year. */\n            $monthPicker.on("click", ".js-prevYear", function (event) {\n                event.preventDefault();\n                var newYear = $picker.get("highlight").year - 1;\n                _this.changeHighlightedDate([newYear, null, null]);\n            });\n            /** Move ahead one year. */\n            $monthPicker.on("click", ".js-nextYear", function (event) {\n                event.preventDefault();\n                var newYear = $picker.get("highlight").year + 1;\n                _this.changeHighlightedDate([newYear, null, null]);\n            });\n            /** Move back one decade. */\n            $yearPicker.on("click", ".js-prevDecade", function (event) {\n                event.preventDefault();\n                var newYear = $picker.get("highlight").year - 10;\n                _this.changeHighlightedDate([newYear, null, null]);\n            });\n            /** Move ahead one decade. */\n            $yearPicker.on("click", ".js-nextDecade", function (event) {\n                event.preventDefault();\n                var newYear = $picker.get("highlight").year + 10;\n                _this.changeHighlightedDate([newYear, null, null]);\n            });\n            /** Go to the current date, shown in the day picking view. */\n            $goToday.click(function (event) {\n                event.preventDefault();\n                /** Select the current date, while keeping the picker open. */\n                var now = new Date();\n                $picker.set("select", [now.getFullYear(), now.getMonth(), now.getDate()]);\n                /** Switch to the default (calendar) view. */\n                $datePicker.removeClass("is-pickingMonths").removeClass("is-pickingYears");\n            });\n            /** Change the highlighted month. */\n            $monthPicker.on("click", ".js-changeDate", function (event) {\n                event.preventDefault();\n                var $changeDate = $(event.target);\n                /** Get the requested date from the data attributes. */\n                var newYear = $changeDate.attr("data-year");\n                var newMonth = $changeDate.attr("data-month");\n                var newDay = $changeDate.attr("data-day");\n                /** Update the date. */\n                _this.changeHighlightedDate([newYear, newMonth, newDay]);\n                /** If we"ve been in the "picking months" state on mobile, remove that state so we show the calendar again. */\n                if ($datePicker.hasClass("is-pickingMonths")) {\n                    $datePicker.removeClass("is-pickingMonths");\n                }\n            });\n            /** Change the highlighted year. */\n            $yearPicker.on("click", ".js-changeDate", function (event) {\n                event.preventDefault();\n                var $changeDate = $(event.target);\n                /** Get the requested date from the data attributes. */\n                var newYear = $changeDate.attr("data-year");\n                var newMonth = $changeDate.attr("data-month");\n                var newDay = $changeDate.attr("data-day");\n                /** Update the date. */\n                _this.changeHighlightedDate([newYear, newMonth, newDay]);\n                /** If we"ve been in the "picking years" state on mobile, remove that state so we show the calendar again. */\n                if ($datePicker.hasClass("is-pickingYears")) {\n                    $datePicker.removeClass("is-pickingYears");\n                }\n            });\n            /** Switch to the default state. */\n            $monthPicker.on("click", ".js-showDayPicker", function () {\n                $datePicker.removeClass("is-pickingMonths");\n                $datePicker.removeClass("is-pickingYears");\n            });\n            /** Switch to the is-pickingMonths state. */\n            $monthControls.on("click", ".js-showMonthPicker", function () {\n                $datePicker.toggleClass("is-pickingMonths");\n            });\n            /** Switch to the is-pickingYears state. */\n            $monthPicker.on("click", ".js-showYearPicker", function () {\n                $datePicker.toggleClass("is-pickingYears");\n            });\n        };\n        /** Change the highlighted date. */\n        DatePicker.prototype.changeHighlightedDate = function (dateArr) {\n            var newDateArr = this.setDateAttributes(dateArr);\n            /** Update it. */\n            this.picker.set("highlight", newDateArr);\n        };\n        /** Whenever the picker renders, do our own rendering on the custom controls. */\n        DatePicker.prototype.updateCustomView = function ($datePicker) {\n            /** Get some letiables ready. */\n            var $monthPicker = $datePicker.find(".ms-DatePicker-monthPicker");\n            var $yearPicker = $datePicker.find(".ms-DatePicker-yearPicker");\n            var $picker = $datePicker.find(".ms-TextField-field").pickadate("picker");\n            /** Set the correct year. */\n            $monthPicker.find(".ms-DatePicker-currentYear").text($picker.get("view").year);\n            /** Highlight the current month. */\n            $monthPicker.find(".ms-DatePicker-monthOption").removeClass("is-highlighted");\n            $monthPicker.find(".ms-DatePicker-monthOption[data-month=\'" + $picker.get("highlight").month + "\']").addClass("is-highlighted");\n            /** Generate the grid of years for the year picker view. */\n            // Start by removing any existing generated output. */\n            $yearPicker.find(".ms-DatePicker-currentDecade").remove();\n            $yearPicker.find(".ms-DatePicker-optionGrid").remove();\n            // Generate the output by going through the years.\n            var startingYear = $picker.get("highlight").year - 11;\n            var decadeText = startingYear + " - " + (startingYear + 11);\n            var output = "<div class=\'ms-DatePicker-currentDecade\'>" + decadeText + "</div>";\n            output += "<div class=\'ms-DatePicker-optionGrid\'>";\n            for (var year = startingYear; year < (startingYear + 12); year++) {\n                output += "<span class=\'ms-DatePicker-yearOption js-changeDate\' data-year=\'" + year + "\'>" + year + "</span>";\n            }\n            output += "</div>";\n            // Output the title and grid of years generated above.\n            $yearPicker.append(output);\n            /** Highlight the current year. */\n            $yearPicker.find(".ms-DatePicker-yearOption").removeClass("is-highlighted");\n            $yearPicker.find(".ms-DatePicker-yearOption[data-year=\'" + $picker.get("highlight").year + "\']").addClass("is-highlighted");\n        };\n        DatePicker.prototype.setDateAttributes = function (dateArr) {\n            var newYear = dateArr[0], newMonth = dateArr[1], newDay = dateArr[2];\n            /** All letiables are optional. If not provided, default to the current value. */\n            if (typeof newYear === "undefined" || newYear === null) {\n                newYear = this.picker.get("highlight").year;\n            }\n            if (typeof newMonth === "undefined" || newMonth === null) {\n                newMonth = this.picker.get("highlight").month;\n            }\n            if (typeof newDay === "undefined" || newDay === null) {\n                newDay = this.picker.get("highlight").date;\n            }\n            return [newYear, newMonth, newDay];\n        };\n        return DatePicker;\n    }());\n    fabric.DatePicker = DatePicker;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\nvar fabric;\n(function (fabric) {\n    var Overlay = (function () {\n        function Overlay(overlayElement) {\n            if (overlayElement) {\n                this.overlayElement = overlayElement;\n            }\n            else {\n                var overlayContainer = document.createElement("div");\n                overlayContainer.setAttribute("class", "ms-Overlay");\n                this.overlayElement = overlayContainer;\n            }\n            this.overlayElement.addEventListener("click", this.hide.bind(this), false);\n        }\n        Overlay.prototype.remove = function () {\n            this.overlayElement.parentElement.removeChild(this.overlayElement);\n        };\n        Overlay.prototype.show = function () {\n            this.overlayElement.classList.add("is-visible");\n            document.body.classList.add("ms-u-overflowHidden");\n        };\n        Overlay.prototype.hide = function () {\n            this.overlayElement.classList.remove("is-visible");\n            document.body.classList.remove("ms-u-overflowHidden");\n        };\n        return Overlay;\n    }());\n    fabric.Overlay = Overlay;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n// @TODO - we can add this once jquery is removed\n/// <reference path="../Overlay/Overlay.ts"/>\nvar fabric;\n(function (fabric) {\n    var Dialog = (function () {\n        function Dialog(dialog) {\n            this._dialog = dialog;\n            this._closeButtonElement = this._dialog.querySelector(".ms-Dialog-buttonClose");\n            this._actionButtonElements = this._dialog.querySelectorAll(".ms-Dialog-action");\n            if (this._closeButtonElement) {\n                this._closeButtonElement.addEventListener("click", this.close.bind(this), false);\n            }\n            for (var i = 0; i < this._actionButtonElements.length; i++) {\n                this._actionButtonElements[i].addEventListener("click", this.close.bind(this), false);\n            }\n        }\n        Dialog.prototype.close = function () {\n            this._overlay.remove();\n            this._dialog.classList.remove("is-open");\n            document.body.classList.remove("ms-u-overflowHidden");\n            this._overlay.overlayElement.removeEventListener("click", this.close.bind(this));\n        };\n        Dialog.prototype.open = function () {\n            this._dialog.classList.add("is-open");\n            this._overlay = new fabric.Overlay();\n            if (!this._dialog.classList.contains("ms-Dialog--blocking")) {\n                this._overlay.overlayElement.addEventListener("click", this.close.bind(this), false);\n                this._overlay.show();\n                document.body.classList.add("ms-u-overflowHidden");\n            }\n            this._dialog.parentElement.appendChild(this._overlay.overlayElement);\n        };\n        return Dialog;\n    }());\n    fabric.Dialog = Dialog;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n// "use strict";\nvar fabric;\n(function (fabric) {\n    /**\n     * DialogHost class\n     */\n    var DialogHost = (function () {\n        function DialogHost() {\n        }\n        return DialogHost;\n    }());\n    fabric.DialogHost = DialogHost;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/// <reference path="../Overlay/Overlay.ts"/>\nvar fabric;\n(function (fabric) {\n    /**\n     * Panel Host\n     *\n     * A host for the panel control\n     *\n     */\n    var PANEL_HOST_CLASS = "ms-PanelHost";\n    var PanelHost = (function () {\n        /**\n         *\n         * @param {HTMLElement} container - the target container for an instance of Panel\n         * @constructor\n         */\n        function PanelHost(layer, callBack) {\n            this._layer = layer;\n            this._callBack = callBack;\n            this._createElements();\n            this._renderElements();\n        }\n        PanelHost.prototype.dismiss = function () {\n            this.overlay.hide();\n            document.body.removeChild(this.panelHost);\n        };\n        PanelHost.prototype.update = function (layer, callBack) {\n            this.panelHost.replaceChild(layer, this._layer);\n            if (callBack) {\n                callBack();\n            }\n        };\n        PanelHost.prototype._renderElements = function () {\n            document.body.appendChild(this.panelHost);\n            if (this._callBack) {\n                this._callBack(this._layer);\n            }\n        };\n        PanelHost.prototype._createElements = function () {\n            this.panelHost = document.createElement("div");\n            this.panelHost.classList.add(PANEL_HOST_CLASS);\n            this.panelHost.appendChild(this._layer);\n            this.overlay = new fabric.Overlay(this._overlayContainer);\n            this.overlay.show();\n            // Append Elements\n            this.panelHost.appendChild(this.overlay.overlayElement);\n        };\n        return PanelHost;\n    }());\n    fabric.PanelHost = PanelHost;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/// <reference path="../PanelHost/PanelHost.ts"/>\nvar fabric;\n(function (fabric) {\n    /**\n     * Panel Host\n     *\n     * A host for the panel control\n     *\n     */\n    var ANIMATE_IN_STATE = "animate-in";\n    var ANIMATE_OUT_STATE = "animate-out";\n    var ANIMATION_END = 400;\n    var Panel = (function () {\n        /**\n         *\n         * @param {HTMLElement} container - the target container for an instance of Panel\n         * @constructor\n         */\n        function Panel(panel, direction, animateOverlay) {\n            this._panel = panel;\n            this._direction = direction || "right";\n            this._animateOverlay = animateOverlay || true;\n            this.panelHost = new fabric.PanelHost(this._panel, this._animateInPanel);\n            this._closeButton = this._panel.querySelector(".ms-PanelAction-close");\n            this._clickHandler = this.dismiss.bind(this, null);\n            this._setEvents();\n            // Set body height to 100% and overflow hidden while panel is open\n            document.body.setAttribute("style", "height: 100%; overflow: hidden;");\n        }\n        Panel.prototype.dismiss = function (callBack) {\n            var _this = this;\n            this._panel.classList.add(ANIMATE_OUT_STATE);\n            setTimeout(function () {\n                _this._panel.classList.remove(ANIMATE_OUT_STATE);\n                _this._panel.classList.remove("is-open");\n                _this.panelHost.dismiss();\n                if (callBack) {\n                    callBack();\n                }\n                // Remove temporary body styles\n                document.body.setAttribute("style", "");\n            }, ANIMATION_END);\n            if (this._closeButton !== null) {\n                this._closeButton.removeEventListener("click", this._clickHandler);\n            }\n        };\n        Panel.prototype._setEvents = function () {\n            this.panelHost.overlay.overlayElement.addEventListener("click", this._clickHandler);\n            if (this._closeButton !== null) {\n                this._closeButton.addEventListener("click", this._clickHandler);\n            }\n        };\n        Panel.prototype._animateInPanel = function (layer) {\n            layer.classList.add(ANIMATE_IN_STATE);\n            layer.classList.add("is-open");\n            setTimeout(function () {\n                layer.classList.remove(ANIMATE_IN_STATE);\n            }, ANIMATION_END);\n        };\n        return Panel;\n    }());\n    fabric.Panel = Panel;\n})(fabric || (fabric = {}));\n\n/// <reference path="../Panel/Panel.ts"/>\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n"use strict";\nvar fabric;\n(function (fabric) {\n    var DROPDOWN_CLASS = "ms-Dropdown";\n    var DROPDOWN_TITLE_CLASS = "ms-Dropdown-title";\n    var DROPDOWN_LABEL_HELPER = "ms-Dropdown-truncator";\n    var DROPDOWN_ITEMS_CLASS = "ms-Dropdown-items";\n    var DROPDOWN_ITEM_CLASS = "ms-Dropdown-item";\n    var DROPDOWN_SELECT_CLASS_SELECTOR = ".ms-Dropdown-select";\n    var PANEL_CLASS = "ms-Panel";\n    var IS_OPEN_CLASS = "is-open";\n    var IS_DISABLED_CLASS = "is-disabled";\n    var IS_SELECTED_CLASS = "is-selected";\n    var ANIMATE_IN_CLASS = "animate-in";\n    var SMALL_MAX_WIDTH = 479;\n    /**\n     * Dropdown Plugin\n     *\n     * Given .ms-Dropdown containers with generic <select> elements inside, this plugin hides the original\n     * dropdown and creates a new "fake" dropdown that can more easily be styled across browsers.\n     *\n     */\n    var Dropdown = (function () {\n        /**\n         *\n         * @param {HTMLElement} container - the target container for an instance of Dropdown\n         * @constructor\n         */\n        function Dropdown(container) {\n            this._container = container;\n            this._dropdownLabelHelper = document.createElement("span");\n            this._dropdownLabelHelper.classList.add(DROPDOWN_LABEL_HELPER);\n            this._dropdownLabelHelper.classList.add(DROPDOWN_TITLE_CLASS);\n            this._newDropdownLabel = document.createElement("span");\n            this._newDropdownLabel.classList.add(DROPDOWN_TITLE_CLASS);\n            this._newDropdown = document.createElement("ul");\n            this._newDropdown.classList.add(DROPDOWN_ITEMS_CLASS);\n            this._dropdownItems = [];\n            this._originalDropdown = container.querySelector(DROPDOWN_SELECT_CLASS_SELECTOR);\n            var _originalOptions = this._originalDropdown.querySelectorAll("option");\n            /** Bind the callbacks to retain their context */\n            this._onCloseDropdown = this._onCloseDropdown.bind(this);\n            this._onItemSelection = this._onItemSelection.bind(this);\n            this._onOpenDropdown = this._onOpenDropdown.bind(this);\n            /** Create a new option as a list item, and add it to the replacement dropdown */\n            for (var i = 0; i < _originalOptions.length; ++i) {\n                var option = _originalOptions[i];\n                if (option.selected) {\n                    this._newDropdownLabel.innerHTML = option.text;\n                }\n                var newItem = document.createElement("li");\n                newItem.classList.add(DROPDOWN_ITEM_CLASS);\n                if (option.disabled) {\n                    newItem.classList.add(IS_DISABLED_CLASS);\n                }\n                newItem.innerHTML = option.text;\n                newItem.addEventListener("click", this._onItemSelection);\n                this._newDropdown.appendChild(newItem);\n                this._dropdownItems.push({\n                    oldOption: option,\n                    newItem: newItem\n                });\n            }\n            /** Add the new replacement dropdown */\n            container.appendChild(this._newDropdownLabel);\n            container.appendChild(this._newDropdown);\n            /** Add dropdown label helper for truncation */\n            container.appendChild(this._dropdownLabelHelper);\n            /** Toggle open/closed state of the dropdown when clicking its title. */\n            this._newDropdownLabel.addEventListener("click", this._onOpenDropdown);\n            this._checkTruncation();\n            this._setWindowEvent();\n        }\n        Dropdown.prototype._setWindowEvent = function () {\n            var _this = this;\n            window.addEventListener("resize", function () {\n                _this._doResize();\n                _this._checkTruncation();\n            }, false);\n        };\n        Dropdown.prototype._checkTruncation = function () {\n            var selected = this._newDropdown.querySelector("." + IS_SELECTED_CLASS);\n            var origText = (selected ?\n                selected.textContent :\n                this._newDropdown.querySelectorAll("." + DROPDOWN_ITEM_CLASS)[0].textContent);\n            this._dropdownLabelHelper.textContent = origText;\n            if (this._dropdownLabelHelper.offsetHeight > this._newDropdownLabel.offsetHeight) {\n                var i = 0;\n                var ellipsis = "...";\n                var newText = void 0;\n                do {\n                    i--;\n                    newText = origText.slice(0, i);\n                    this._dropdownLabelHelper.textContent = newText + ellipsis;\n                } while (this._dropdownLabelHelper.offsetHeight > this._newDropdownLabel.offsetHeight);\n            }\n            this._newDropdownLabel.textContent = this._dropdownLabelHelper.textContent;\n        };\n        Dropdown.prototype._getScreenSize = function () {\n            var w = window;\n            var wSize = {\n                x: 0,\n                y: 0\n            };\n            var d = document, e = d.documentElement, g = d.getElementsByTagName("body")[0];\n            wSize.x = w.innerWidth || e.clientWidth || g.clientWidth;\n            wSize.y = w.innerHeight || e.clientHeight || g.clientHeight;\n            return wSize;\n        };\n        Dropdown.prototype._doResize = function () {\n            var isOpen = this._container.classList.contains(IS_OPEN_CLASS);\n            if (!isOpen) {\n                return;\n            }\n            var screenSize = this._getScreenSize().x;\n            if (screenSize <= SMALL_MAX_WIDTH) {\n                this._openDropdownAsPanel();\n            }\n            else {\n                this._removeDropdownAsPanel();\n            }\n        };\n        Dropdown.prototype._openDropdownAsPanel = function () {\n            if (this._panel === undefined) {\n                this._panelContainer = document.createElement("div");\n                this._panelContainer.classList.add(PANEL_CLASS);\n                this._panelContainer.classList.add(DROPDOWN_CLASS);\n                this._panelContainer.classList.add(IS_OPEN_CLASS);\n                this._panelContainer.classList.add(ANIMATE_IN_CLASS);\n                this._panelContainer.appendChild(this._newDropdown);\n                /** Assign the script to the new panel, which creates a panel host, overlay, and attaches it to the DOM */\n                this._panel = new fabric.Panel(this._panelContainer);\n            }\n        };\n        Dropdown.prototype._removeDropdownAsPanel = function (evt) {\n            var _this = this;\n            if (this._panel !== undefined) {\n                /** destroy panel and move dropdown back to outside the panel */\n                /* if event target is overlay element, only append dropdown to prevent */\n                /* double dismiss bug, otherwise, dismiss and append */\n                if (evt && evt.target === this._panel.panelHost.overlay.overlayElement) {\n                    this._container.appendChild(this._newDropdown);\n                }\n                else {\n                    this._panel.dismiss(function () {\n                        _this._container.appendChild(_this._newDropdown);\n                    });\n                }\n                this._panel = undefined;\n            }\n        };\n        Dropdown.prototype._onOpenDropdown = function (evt) {\n            var isDisabled = this._container.classList.contains(IS_DISABLED_CLASS);\n            var isOpen = this._container.classList.contains(IS_OPEN_CLASS);\n            if (!isDisabled && !isOpen) {\n                /** Stop the click event from propagating, which would just close the dropdown immediately. */\n                evt.stopPropagation();\n                this._closeOtherDropdowns();\n                /** Go ahead and open that dropdown. */\n                this._container.classList.add(IS_OPEN_CLASS);\n                /** Temporarily bind an event to the document that will close this dropdown when clicking anywhere. */\n                document.addEventListener("click", this._onCloseDropdown);\n                var screenSize = this._getScreenSize().x;\n                if (screenSize <= SMALL_MAX_WIDTH) {\n                    this._openDropdownAsPanel();\n                }\n            }\n        };\n        Dropdown.prototype._closeOtherDropdowns = function () {\n            var dropdowns = document.querySelectorAll("." + DROPDOWN_CLASS + "." + IS_OPEN_CLASS);\n            for (var i = 0; i < dropdowns.length; i++) {\n                dropdowns[i].classList.remove(IS_OPEN_CLASS);\n            }\n        };\n        Dropdown.prototype._onCloseDropdown = function (evt) {\n            this._removeDropdownAsPanel(evt);\n            this._container.classList.remove(IS_OPEN_CLASS);\n            document.removeEventListener("click", this._onCloseDropdown);\n        };\n        Dropdown.prototype._onItemSelection = function (evt) {\n            var item = evt.target;\n            var isDropdownDisabled = this._container.classList.contains(IS_DISABLED_CLASS);\n            var isOptionDisabled = item.classList.contains(IS_DISABLED_CLASS);\n            if (!isDropdownDisabled && !isOptionDisabled) {\n                /** Deselect all items and select this one. */\n                /** Update the original dropdown. */\n                for (var i = 0; i < this._dropdownItems.length; ++i) {\n                    if (this._dropdownItems[i].newItem === item) {\n                        this._dropdownItems[i].newItem.classList.add(IS_SELECTED_CLASS);\n                        this._dropdownItems[i].oldOption.selected = true;\n                    }\n                    else {\n                        this._dropdownItems[i].newItem.classList.remove(IS_SELECTED_CLASS);\n                        this._dropdownItems[i].oldOption.selected = false;\n                    }\n                }\n                /** Update the replacement dropdown\'s title. */\n                this._newDropdownLabel.innerHTML = item.textContent;\n                this._checkTruncation();\n                /** Trigger any change event tied to the original dropdown. */\n                var changeEvent = document.createEvent("HTMLEvents");\n                changeEvent.initEvent("change", false, true);\n                this._originalDropdown.dispatchEvent(changeEvent);\n            }\n        };\n        return Dropdown;\n    }());\n    fabric.Dropdown = Dropdown;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n// "use strict";\n/// <reference path="../../utilities/Animate.ts"/>\n/// <reference path="../../utilities/Ease.ts"/>\nvar fabric;\n(function (fabric) {\n    /**\n     *\n     * Adds basic demonstration functionality to .ms-PersonaCard components.\n     *\n     */\n    var PersonaCard = (function () {\n        /**\n         *\n         * @param {Element} container - the target container for an instance of PersonaCard\n         * @constructor\n         */\n        function PersonaCard(container) {\n            this._container = container;\n            var activeElement = this._container.querySelector(".ms-PersonaCard-action.is-active");\n            var activeId = activeElement.getAttribute("data-action-id");\n            this._actions = this._container.querySelector(".ms-PersonaCard-actions");\n            this._expander = this._container.querySelector(".ms-PersonaCard-detailExpander");\n            this._actionDetailBox = this._container.querySelector(".ms-PersonaCard-actionDetailBox");\n            this._setDetail(activeId);\n            this._boundOnActionClick = this._onActionClick.bind(this);\n            this._boundOnExpanderClick = this._onExpanderClick.bind(this);\n            this._boundOnTab = this._onTab.bind(this);\n            this._addListeners();\n        }\n        PersonaCard.prototype.removeListeners = function () {\n            this._actions.removeEventListener("click", this._boundOnActionClick);\n            this._expander.removeEventListener("click", this._boundOnExpanderClick);\n            this._container.removeEventListener("keydown", this._boundOnTab);\n        };\n        PersonaCard.prototype._addListeners = function () {\n            this._actions.addEventListener("click", this._boundOnActionClick, false);\n            this._expander.addEventListener("click", this._boundOnExpanderClick, false);\n            this._container.addEventListener("keydown", this._boundOnTab, false);\n        };\n        PersonaCard.prototype._onTab = function (event) {\n            var target = event.target;\n            if (event.keyCode === 9 && target.classList.contains("ms-PersonaCard-action")) {\n                this._onActionClick(event);\n            }\n        };\n        PersonaCard.prototype._onExpanderClick = function (event) {\n            var parent = event.target.parentElement;\n            if (parent.classList.contains("is-collapsed")) {\n                parent.classList.remove("is-collapsed");\n            }\n            else {\n                parent.classList.add("is-collapsed");\n            }\n            var parentHeight = parent.clientHeight;\n            this._animateDetail(parentHeight);\n        };\n        PersonaCard.prototype._onActionClick = function (event) {\n            var target = event.target;\n            var actionId = target.getAttribute("data-action-id");\n            if (actionId && target.className.indexOf("is-active") === -1) {\n                this._setAction(target);\n                this._setDetail(actionId);\n            }\n        };\n        PersonaCard.prototype._setAction = function (target) {\n            var activeElement = this._container.querySelector(".ms-PersonaCard-action.is-active");\n            activeElement.classList.remove("is-active");\n            target.classList.add("is-active");\n        };\n        PersonaCard.prototype._setDetail = function (activeId) {\n            var selector = ".ms-PersonaCard-details[data-detail-id=\'" + activeId + "\']";\n            var lastDetail = this._container.querySelector(".ms-PersonaCard-details.is-active");\n            var activeDetail = this._container.querySelector(selector);\n            if (lastDetail) {\n                lastDetail.classList.remove("is-active");\n            }\n            activeDetail.classList.add("is-active");\n            var detailHeight = activeDetail.clientHeight;\n            this._animateDetail(detailHeight);\n        };\n        PersonaCard.prototype._animateDetail = function (height) {\n            var _this = this;\n            this._actionDetailBox.style.overflowY = "hidden";\n            fabric.Animate.transition(this._actionDetailBox, {\n                height: height,\n                duration: 0.25,\n                ease: fabric.Ease.SINE_EASE_OUT,\n                onEnd: function () {\n                    _this._actionDetailBox.style.overflowY = "auto";\n                }\n            });\n        };\n        return PersonaCard;\n    }());\n    fabric.PersonaCard = PersonaCard;\n})(fabric || (fabric = {}));\n\n/// <reference path="../ContextualHost/ContextualHost.ts"/>\n/// <reference path="../PersonaCard/PersonaCard.ts"/>\n/**\n * FacePile\n *\n * A host for FacePile\n *\n */\nvar fabric;\n(function (fabric) {\n    // const CONTEXTUAL_HOST_CLASS = ".ms-ContextualHost";\n    var MODAL_POSITION = "top";\n    var Persona = (function () {\n        /**\n         *\n         * @param {HTMLElement} container - the target container for an instance of FacePile\n         * @constructor\n         */\n        function Persona(container) {\n            this._persona = container;\n            // If Persona Card and Contextual host exist continue\n            // this._contextualHost = this._persona.querySelector(CONTEXTUAL_HOST_CLASS);\n            this._personaCard = this._persona.querySelector(".ms-PersonaCard");\n            if (this._personaCard) {\n                this._assignEvents();\n                this._personaCard.setAttribute("style", "display: none;");\n                this._createPersonaCard();\n            }\n        }\n        Persona.prototype._createPersonaCard = function () {\n            this._personaCardInstance = new fabric.PersonaCard(this._personaCard);\n        };\n        Persona.prototype._createContextualHostInstance = function () {\n            this._personaCard.setAttribute("style", "display: block;");\n            this._contextualHostInstance = new fabric.ContextualHost(this._personaCard, MODAL_POSITION, this._persona);\n        };\n        Persona.prototype._personaEventHandler = function () {\n            this._createContextualHostInstance();\n        };\n        Persona.prototype._assignEvents = function () {\n            var _this = this;\n            this._persona.addEventListener("click", this._personaEventHandler.bind(this), false);\n            this._persona.addEventListener("keyup", function (e) { return (e.keyCode === 32) ? _this._personaEventHandler() : null; }, false);\n        };\n        return Persona;\n    }());\n    fabric.Persona = Persona;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/// <reference path="../Persona/Persona.ts"/>\nvar fabric;\n(function (fabric) {\n    /**\n     * FacePile\n     *\n     * A host for FacePile\n     *\n     */\n    var PERSONA_CLASS = ".ms-Persona--facePile";\n    var PERSONA_INITIALS = ".ms-Persona-initials";\n    var PERSONA_IMAGE = ".ms-Persona-image";\n    var PERSONA_PRIMARY_CLASS = ".ms-Persona-primaryText";\n    var PERSONA_SECONDARY_CLASS = ".ms-Persona-secondaryText";\n    var FacePile = (function () {\n        /**\n         *\n         * @param {HTMLElement} container - the target container for an instance of FacePile\n         * @constructor\n         */\n        function FacePile(container) {\n            this._personaCollection = [];\n            this._facePile = container;\n            this._createPersonaCollection();\n        }\n        FacePile.prototype._createPersonaCollection = function () {\n            var _personas = document.querySelectorAll(PERSONA_CLASS);\n            for (var i = 0; i < _personas.length; i++) {\n                var _thisPersona = _personas[i];\n                this._personaCollection.push({\n                    item: _thisPersona,\n                    initials: _thisPersona.querySelector(PERSONA_INITIALS).textContent,\n                    image: _thisPersona.querySelector(PERSONA_IMAGE) ?\n                        _thisPersona.querySelector(PERSONA_IMAGE).getAttribute("src") : null,\n                    primaryText: _thisPersona.querySelector(PERSONA_PRIMARY_CLASS) ?\n                        _thisPersona.querySelector(PERSONA_PRIMARY_CLASS).textContent : "",\n                    secondaryText: _thisPersona.querySelector(PERSONA_SECONDARY_CLASS) ?\n                        _thisPersona.querySelector(PERSONA_SECONDARY_CLASS).textContent : "",\n                    personaInstance: new fabric.Persona(_thisPersona)\n                });\n            }\n        };\n        return FacePile;\n    }());\n    fabric.FacePile = FacePile;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n"use strict";\nvar fabric;\n(function (fabric) {\n    /**\n     * List Item Plugin\n     *\n     * Adds basic demonstration functionality to .ms-ListItem components.\n     *\n     */\n    var ListItem = (function () {\n        /**\n         *\n         * @param {HTMLElement} container - the target container for an instance of ListItem\n         * @constructor\n         */\n        function ListItem(container) {\n            this._container = container;\n            this._toggleElement = this._container.querySelector(".ms-ListItem-selectionTarget");\n            this._addListeners();\n        }\n        ListItem.prototype.removeListeners = function () {\n            this._toggleElement.removeEventListener("click", this._toggleHandler.bind(this));\n        };\n        ListItem.prototype._addListeners = function () {\n            this._toggleElement.addEventListener("click", this._toggleHandler.bind(this), false);\n        };\n        ListItem.prototype._toggleHandler = function () {\n            this._container.classList.toggle("is-selected");\n        };\n        return ListItem;\n    }());\n    fabric.ListItem = ListItem;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/// <reference path="../ListItem/ListItem.ts"/>\n"use strict";\nvar fabric;\n(function (fabric) {\n    /**\n     * List Item Plugin\n     *\n     * Adds basic demonstration functionality to .ms-List components.\n     *\n     */\n    var List = (function () {\n        /**\n         *\n         * @param {HTMLElement} container - the target container for an instance of List\n         * @constructor\n         */\n        function List(container) {\n            this._container = container;\n            this._listItemComponents = [];\n            var choiceFieldElements = this._container.querySelectorAll(".ms-ListItem");\n            for (var i = 0; i < choiceFieldElements.length; i++) {\n                this._listItemComponents[i] = new fabric.ListItem(choiceFieldElements[i]);\n            }\n        }\n        return List;\n    }());\n    fabric.List = List;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/**\n * @namespace fabric\n */\nvar fabric;\n(function (fabric) {\n    "use strict";\n    /**\n     * MessageBanner component\n     *\n     * A component to display error messages\n     *\n     */\n    var MessageBanner = (function () {\n        /**\n         *\n         * @param {HTMLElement} container - the target container for an instance of MessageBanner\n         * @constructor\n         */\n        function MessageBanner(container) {\n            this._textContainerMaxWidth = 700;\n            this._bufferElementsWidth = 88;\n            this._bufferElementsWidthSmall = 35;\n            this.SMALL_BREAK_POINT = 480;\n            this.container = container;\n            this.init();\n        }\n        /**\n         * initializes component\n         */\n        MessageBanner.prototype.init = function () {\n            this._cacheDOM();\n            this._setListeners();\n            this._clientWidth = this._errorBanner.offsetWidth;\n            this._initTextWidth = this._clipper.offsetWidth;\n            this._onResize();\n        };\n        /**\n         * shows banner if the banner is hidden\n         */\n        MessageBanner.prototype.showBanner = function () {\n            this._errorBanner.className = "ms-MessageBanner";\n        };\n        /**\n         * sets styles on resize\n         */\n        MessageBanner.prototype._onResize = function () {\n            this._clientWidth = this._errorBanner.offsetWidth;\n            if (window.innerWidth >= this.SMALL_BREAK_POINT) {\n                this._resizeRegular();\n            }\n            else {\n                this._resizeSmall();\n            }\n        };\n        /**\n         * resize above 480 pixel breakpoint\n         */\n        MessageBanner.prototype._resizeRegular = function () {\n            if ((this._clientWidth - this._bufferSize) > this._initTextWidth && this._initTextWidth < this._textContainerMaxWidth) {\n                this._textWidth = "auto";\n                this._chevronButton.className = "ms-MessageBanner-expand";\n                this._collapse();\n            }\n            else {\n                this._textWidth = Math.min((this._clientWidth - this._bufferSize), this._textContainerMaxWidth) + "px";\n                if (this._chevronButton.className.indexOf("is-visible") === -1) {\n                    this._chevronButton.className += " is-visible";\n                }\n            }\n            this._clipper.style.width = this._textWidth;\n        };\n        /**\n         * resize below 480 pixel breakpoint\n         */\n        MessageBanner.prototype._resizeSmall = function () {\n            if (this._clientWidth - (this._bufferElementsWidthSmall + this._closeButton.offsetWidth) > this._initTextWidth) {\n                this._textWidth = "auto";\n                this._collapse();\n            }\n            else {\n                this._textWidth = (this._clientWidth - (this._bufferElementsWidthSmall + this._closeButton.offsetWidth)) + "px";\n            }\n            this._clipper.style.width = this._textWidth;\n        };\n        /**\n         * caches elements and values of the component\n         */\n        MessageBanner.prototype._cacheDOM = function () {\n            this._errorBanner = this.container;\n            this._clipper = this.container.querySelector(".ms-MessageBanner-clipper");\n            this._chevronButton = this.container.querySelector(".ms-MessageBanner-expand");\n            this._actionButton = this.container.querySelector(".ms-MessageBanner-action");\n            this._bufferSize = this._actionButton.offsetWidth + this._bufferElementsWidth;\n            this._closeButton = this.container.querySelector(".ms-MessageBanner-close");\n        };\n        /**\n         * expands component to show full error message\n         */\n        MessageBanner.prototype._expand = function () {\n            var icon = this._chevronButton.querySelector(".ms-Icon");\n            this._errorBanner.className += " is-expanded";\n            icon.className = "ms-Icon ms-Icon--DoubleChevronUp";\n        };\n        /**\n         * collapses component to only show truncated message\n         */\n        MessageBanner.prototype._collapse = function () {\n            var icon = this._chevronButton.querySelector(".ms-Icon");\n            this._errorBanner.className = "ms-MessageBanner";\n            icon.className = "ms-Icon ms-Icon--DoubleChevronDown";\n        };\n        MessageBanner.prototype._toggleExpansion = function () {\n            if (this._errorBanner.className.indexOf("is-expanded") > -1) {\n                this._collapse();\n            }\n            else {\n                this._expand();\n            }\n        };\n        MessageBanner.prototype._hideMessageBanner = function () {\n            this._errorBanner.className = "ms-MessageBanner is-hidden";\n        };\n        /**\n         * hides banner when close button is clicked\n         */\n        MessageBanner.prototype._hideBanner = function () {\n            if (this._errorBanner.className.indexOf("hide") === -1) {\n                this._errorBanner.className += " hide";\n                setTimeout(this._hideMessageBanner.bind(this), 500);\n            }\n        };\n        /**\n         * sets handlers for resize and button click events\n         */\n        MessageBanner.prototype._setListeners = function () {\n            window.addEventListener("resize", this._onResize.bind(this), false);\n            this._chevronButton.addEventListener("click", this._toggleExpansion.bind(this), false);\n            this._closeButton.addEventListener("click", this._hideBanner.bind(this), false);\n        };\n        return MessageBanner;\n    }());\n    fabric.MessageBanner = MessageBanner;\n})(fabric || (fabric = {})); // end fabric namespace\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/// <reference path="../Overlay/Overlay.ts"/>\n/// <reference path="../ContextualHost/ContextualHost.ts"/>\nvar fabric;\n(function (fabric) {\n    /**\n     * People Picker\n     *\n     * People picker control\n     *\n     */\n    var MODAL_POSITION = "bottom";\n    var TOKEN_CLASS = "ms-Persona--token";\n    var PeoplePicker = (function () {\n        /**\n         *\n         * @param {HTMLElement} container - the target container for an instance of People Picker\n         * @constructor\n         */\n        function PeoplePicker(container) {\n            this._container = container;\n            this._peoplePickerMenu = this._container.querySelector(".ms-PeoplePicker-results");\n            this._peoplePickerSearch = this._container.querySelector(".ms-TextField-field");\n            this._peoplePickerSearchBox = this._container.querySelector(".ms-PeoplePicker-searchBox");\n            this._selectedPeople = this._container.querySelector(".ms-PeoplePicker-selectedPeople");\n            this._assignClicks();\n            if (this._selectedPeople) {\n                this._assignRemoveHandler();\n                this._selectedCount = this._container.querySelector(".ms-PeoplePicker-selectedCount");\n                this._selectedPlural = this._container.querySelector(".ms-PeoplePicker-selectedCountPlural");\n            }\n            if (this._peoplePickerMenu) {\n                this._peoplePickerMenu.setAttribute("style", "display: none;");\n            }\n        }\n        PeoplePicker.prototype._createModalHost = function (e) {\n            e.stopPropagation();\n            this._peoplePickerMenu.setAttribute("style", "display: block;");\n            this._contextualHostView = new fabric.ContextualHost(this._peoplePickerMenu, MODAL_POSITION, this._peoplePickerSearchBox, false, [""], true, this._contextHostCallBack.bind(this));\n            this._peoplePickerSearchBox.classList.add("is-active");\n            this._isContextualMenuOpen = true;\n        };\n        PeoplePicker.prototype._clickHandler = function (e) {\n            this._createModalHost(e);\n            // Select all results and remove event listeners by cloning\n            var peoplePickerResults = this._peoplePickerMenu.querySelector(".ms-PeoplePicker-result");\n            var resultsParent = peoplePickerResults.parentNode;\n            var resultsClone = resultsParent.cloneNode(true);\n            resultsParent.parentNode.replaceChild(resultsClone, resultsParent);\n            // Get all results\n            this._peoplePickerResults = this._peoplePickerMenu.querySelectorAll(".ms-PeoplePicker-result");\n            // Add _selectResult listeners to each result\n            for (var i = 0; i < this._peoplePickerResults.length; i++) {\n                var personaResult = this._peoplePickerResults[i].querySelector(".ms-Persona");\n                var removeButton = this._peoplePickerResults[i].querySelector(".ms-PeoplePicker-resultAction");\n                personaResult.addEventListener("click", this._selectResult.bind(this), true);\n                removeButton.addEventListener("click", this._removeItem.bind(this), true);\n            }\n        };\n        PeoplePicker.prototype._selectResult = function (e) {\n            e.stopPropagation();\n            var currentResult = this._findElement(e.target, "ms-Persona");\n            var clonedResult = currentResult.cloneNode(true);\n            // if facePile - add to members list / else tokenize\n            if (this._container.classList.contains("ms-PeoplePicker--facePile")) {\n                this._addResultToMembers(clonedResult);\n            }\n            else {\n                this._tokenizeResult(clonedResult);\n            }\n            this._updateCount();\n            // Close the open contextual host\n            this._contextualHostView.disposeModal();\n        };\n        PeoplePicker.prototype._findElement = function (childObj, className) {\n            var currentElement = childObj.parentNode;\n            while (!currentElement.classList.contains(className)) {\n                currentElement = currentElement.parentNode;\n            }\n            return currentElement;\n        };\n        PeoplePicker.prototype._addRemoveBtn = function (persona, token) {\n            var actionBtn;\n            var actionIcon = document.createElement("i");\n            if (token) {\n                actionBtn = document.createElement("div");\n                actionBtn.classList.add("ms-Persona-actionIcon");\n                actionBtn.addEventListener("click", this._removeToken.bind(this), true);\n            }\n            else {\n                actionBtn = document.createElement("button");\n                actionBtn.classList.add("ms-PeoplePicker-resultAction");\n                actionBtn.addEventListener("click", this._removeResult.bind(this), true);\n            }\n            actionIcon.classList.add("ms-Icon", "ms-Icon--Cancel");\n            actionBtn.appendChild(actionIcon);\n            persona.appendChild(actionBtn);\n        };\n        PeoplePicker.prototype._removeToken = function (e) {\n            var currentToken = this._findElement(e.target, "ms-Persona");\n            currentToken.remove();\n        };\n        PeoplePicker.prototype._removeResult = function (e) {\n            var currentResult = this._findElement(e.target, "ms-PeoplePicker-selectedPerson");\n            currentResult.remove();\n            this._updateCount();\n        };\n        PeoplePicker.prototype._removeItem = function (e) {\n            var currentItem = this._findElement(e.target, "ms-PeoplePicker-result");\n            currentItem.remove();\n        };\n        PeoplePicker.prototype._updateCount = function () {\n            if (this._selectedPeople) {\n                var count = this._selectedPeople.querySelectorAll(".ms-PeoplePicker-selectedPerson").length;\n                this._selectedCount.textContent = count.toString();\n                this._selectedPlural.style.display = (count === 1) ? "none" : "inline";\n            }\n        };\n        PeoplePicker.prototype._tokenizeResult = function (tokenResult) {\n            var searchBox = this._container.querySelector(".ms-PeoplePicker-searchBox");\n            var textField = searchBox.querySelector(".ms-TextField");\n            // Add token classes to persona\n            tokenResult.classList.add(TOKEN_CLASS, "ms-PeoplePicker-persona");\n            // Add the remove button to the token\n            this._addRemoveBtn(tokenResult, true);\n            // Use persona xs variant for token\n            if (tokenResult.classList.contains("ms-Persona--sm")) {\n                tokenResult.classList.remove("ms-Persona--sm");\n                tokenResult.classList.add("ms-Persona--xs");\n            }\n            // Prepend the token before the search field\n            searchBox.insertBefore(tokenResult, textField);\n        };\n        PeoplePicker.prototype._addResultToMembers = function (persona) {\n            var membersList = this._container.querySelector(".ms-PeoplePicker-selectedPeople");\n            var firstMember = membersList.querySelector(".ms-PeoplePicker-selectedPerson");\n            var selectedItem = document.createElement("li");\n            // Create the selectedPerson list item\n            selectedItem.classList.add("ms-PeoplePicker-selectedPerson");\n            selectedItem.tabIndex = 1;\n            // Append the result persona to list item\n            selectedItem.appendChild(persona);\n            // Add the remove button to the persona\n            this._addRemoveBtn(selectedItem, false);\n            // Add removeResult event to resultAction\n            selectedItem.querySelector(".ms-PeoplePicker-resultAction").addEventListener("click", this._removeResult.bind(this), true);\n            membersList.insertBefore(selectedItem, firstMember);\n        };\n        PeoplePicker.prototype._assignClicks = function () {\n            var _this = this;\n            this._peoplePickerSearch.addEventListener("click", this._clickHandler.bind(this), true);\n            this._peoplePickerSearch.addEventListener("keyup", function (e) {\n                if (e.keyCode !== 27 && !_this._isContextualMenuOpen) {\n                    _this._clickHandler(e);\n                }\n            }, true);\n        };\n        PeoplePicker.prototype._assignRemoveHandler = function () {\n            var selectedPeople = this._selectedPeople.querySelectorAll(".ms-PeoplePicker-selectedPerson");\n            for (var i = 0; i < selectedPeople.length; i++) {\n                selectedPeople[i].querySelector(".ms-PeoplePicker-resultAction").addEventListener("click", this._removeResult.bind(this), true);\n            }\n        };\n        PeoplePicker.prototype._contextHostCallBack = function () {\n            this._peoplePickerSearchBox.classList.remove("is-active");\n            this._isContextualMenuOpen = false;\n        };\n        return PeoplePicker;\n    }());\n    fabric.PeoplePicker = PeoplePicker;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n"use strict";\nvar fabric;\n(function (fabric) {\n    /**\n     * Pivot Plugin\n     *\n     * Adds basic demonstration functionality to .ms-Pivot components.\n     *\n     */\n    var Pivot = (function () {\n        /**\n         *\n         * @param {HTMLElement} container - the target container for an instance of Pivot\n         * @constructor\n         */\n        function Pivot(container) {\n            this._container = container;\n            this._addListeners();\n            // Show the first pivot\'s content\n            var firstContent = this._container.querySelector(".ms-Pivot-content");\n            firstContent.style.display = "block";\n        }\n        Pivot.prototype.removeListeners = function () {\n            this._container.removeEventListener("click", this._selectTab.bind(this));\n        };\n        Pivot.prototype._addListeners = function () {\n            var _this = this;\n            this._container.querySelector(".ms-Pivot-links").addEventListener("click", this._selectTabMouse.bind(this), false);\n            this._container.addEventListener("keyup", function (event) {\n                if (event.keyCode === 13) {\n                    _this._selectTabKeyboard(event);\n                }\n            }, true);\n        };\n        Pivot.prototype._selectTab = function (selectedTab) {\n            // Only if its a pivot link and if it doesn\'t have ellipsis\n            if (selectedTab.classList.contains("ms-Pivot-link") && !selectedTab.querySelector(".ms-Pivot-ellipsis")) {\n                // Iterate over siblings and un-select them\n                var sibling = selectedTab.parentElement.firstElementChild;\n                while (sibling) {\n                    sibling.classList.remove("is-selected");\n                    sibling = sibling.nextElementSibling;\n                }\n                // Select the clicked tab\n                selectedTab.classList.add("is-selected");\n                // Hide all of the content\n                var containers = this._container.querySelectorAll(".ms-Pivot-content");\n                Array.prototype.forEach.call(containers, function (el, i) {\n                    el.style.display = "none";\n                });\n                // Show the content that corresponds to the selected tab\n                var selectedContentName = selectedTab.getAttribute("data-content");\n                var selectedContent = this._container.querySelector(".ms-Pivot-content[data-content=\'" + selectedContentName + "\']");\n                selectedContent.style.display = "block";\n            }\n        };\n        Pivot.prototype._selectTabMouse = function (event) {\n            event.preventDefault();\n            var selectedTab = event.target;\n            this._selectTab(selectedTab);\n        };\n        Pivot.prototype._selectTabKeyboard = function (event) {\n            event.preventDefault();\n            var selectedTab = event.target;\n            this._selectTab(selectedTab);\n        };\n        return Pivot;\n    }());\n    fabric.Pivot = Pivot;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/**\n * @namespace fabric\n */\nvar fabric;\n(function (fabric) {\n    "use strict";\n    /**\n     * ProgressIndicator component\n     *\n     * A component for outputting determinate progress\n     *\n     */\n    var ProgressIndicator = (function () {\n        /**\n         *\n         * @param {HTMLDivElement} container - the target container for an instance of ProgressIndicator\n         * @constructor\n         */\n        function ProgressIndicator(container) {\n            this.container = container;\n            this.cacheDOM();\n        }\n        /**\n         * Sets the progress percentage for a determinate\n         * operation. Either use this or setProgress\n         * and setTotal as setProgressPercent assumes\n         * you\'ve done a percentage calculation before\n         * injecting it into the function\n         * @param {number} percent - a floating point number from 0 to 1\n         */\n        ProgressIndicator.prototype.setProgressPercent = function (percent) {\n            this._progressBar.style.width = Math.round(this._width * percent) + "px";\n        };\n        /**\n         * Sets the progress for a determinate operation.\n         * Use this in combination with setTotal.\n         * @param {number} progress\n         */\n        ProgressIndicator.prototype.setProgress = function (progress) {\n            this._progress = progress;\n            var percentage = this._progress / this._total;\n            this.setProgressPercent(percentage);\n        };\n        /**\n         * Sets the total file size, etc. for a\n         * determinate operation. Use this in\n         * combination with setProgress\n         * @param {number} total\n         */\n        ProgressIndicator.prototype.setTotal = function (total) {\n            this._total = total;\n        };\n        /**\n         * Sets the text for the title or label\n         * of an instance\n         * @param {string} name\n         */\n        ProgressIndicator.prototype.setName = function (name) {\n            this._itemName.innerHTML = name;\n        };\n        /**\n         * Sets the text for a description\n         * of an instance\n         * @param {string} name\n         */\n        ProgressIndicator.prototype.setDescription = function (description) {\n            this._itemDescription.innerHTML = description;\n        };\n        /**\n         * caches elements and values of the component\n         *\n         */\n        ProgressIndicator.prototype.cacheDOM = function () {\n            // an itemName element is optional\n            this._itemName = this.container.querySelector(".ms-ProgressIndicator-itemName") || null;\n            // an itemDescription element is optional\n            this._itemDescription = this.container.querySelector(".ms-ProgressIndicator-itemDescription") || null;\n            this._progressBar = this.container.querySelector(".ms-ProgressIndicator-progressBar");\n            var itemProgress = this.container.querySelector(".ms-ProgressIndicator-itemProgress");\n            this._width = itemProgress.offsetWidth;\n        };\n        return ProgressIndicator;\n    }());\n    fabric.ProgressIndicator = ProgressIndicator;\n})(fabric || (fabric = {})); // end fabric namespace\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/**\n * @namespace fabric\n */\nvar fabric;\n(function (fabric) {\n    var CircleObject = (function () {\n        function CircleObject(element, j) {\n            this.element = element;\n            this.j = j;\n        }\n        return CircleObject;\n    }());\n    /**\n     * Spinner Component\n     *\n     * An animating activity indicator.\n     *\n     */\n    var Spinner = (function () {\n        /**\n         * @param {HTMLDOMElement} target - The element the Spinner will attach itself to.\n         */\n        function Spinner(container) {\n            this.eightSize = 0.2;\n            this.animationSpeed = 90;\n            this.parentSize = 20;\n            this.fadeIncrement = 0;\n            this.circleObjects = [];\n            this._target = container;\n            this._init();\n        }\n        /**\n         * @function start - starts or restarts the animation sequence\n         * @memberOf fabric.Spinner\n         */\n        Spinner.prototype.start = function () {\n            var _this = this;\n            this.stop();\n            this.interval = setInterval(function () {\n                var i = _this.circleObjects.length;\n                while (i--) {\n                    _this._fade(_this.circleObjects[i]);\n                }\n            }, this.animationSpeed);\n        };\n        /**\n         * @function stop - stops the animation sequence\n         * @memberOf fabric.Spinner\n         */\n        Spinner.prototype.stop = function () {\n            clearInterval(this.interval);\n        };\n        // private methods\n        Spinner.prototype._init = function () {\n            this._setTargetElement();\n            this._setPropertiesForSize();\n            this._createCirclesAndArrange();\n            this._initializeOpacities();\n            this.start();\n        };\n        Spinner.prototype._setPropertiesForSize = function () {\n            if (this.spinner.className.indexOf("large") > -1) {\n                this.parentSize = 28;\n                this.eightSize = 0.179;\n            }\n            this.offsetSize = this.eightSize;\n            this.numCircles = 8;\n        };\n        Spinner.prototype._setTargetElement = function () {\n            // for backwards compatibility\n            if (this._target.className.indexOf("ms-Spinner") === -1) {\n                this.spinner = document.createElement("div");\n                this.spinner.className = "ms-Spinner";\n                this._target.appendChild(this.spinner);\n            }\n            else {\n                this.spinner = this._target;\n            }\n        };\n        Spinner.prototype._initializeOpacities = function () {\n            var i = 0;\n            var j = 1;\n            var opacity;\n            this.fadeIncrement = 1 / this.numCircles;\n            for (i; i < this.numCircles; i++) {\n                var circleObject = this.circleObjects[i];\n                opacity = (this.fadeIncrement * j++);\n                this._setOpacity(circleObject.element, opacity);\n            }\n        };\n        Spinner.prototype._fade = function (circleObject) {\n            var opacity = this._getOpacity(circleObject.element) - this.fadeIncrement;\n            if (opacity <= 0) {\n                opacity = 1;\n            }\n            this._setOpacity(circleObject.element, opacity);\n        };\n        Spinner.prototype._getOpacity = function (element) {\n            return parseFloat(window.getComputedStyle(element).getPropertyValue("opacity"));\n        };\n        Spinner.prototype._setOpacity = function (element, opacity) {\n            element.style.opacity = opacity.toString();\n        };\n        Spinner.prototype._createCircle = function () {\n            var circle = document.createElement("div");\n            circle.className = "ms-Spinner-circle";\n            circle.style.width = circle.style.height = this.parentSize * this.offsetSize + "px";\n            return circle;\n        };\n        Spinner.prototype._createCirclesAndArrange = function () {\n            var angle = 0;\n            var offset = this.parentSize * this.offsetSize;\n            var step = (2 * Math.PI) / this.numCircles;\n            var i = this.numCircles;\n            var circleObject;\n            var radius = (this.parentSize - offset) * 0.5;\n            while (i--) {\n                var circle = this._createCircle();\n                var x = Math.round(this.parentSize * 0.5 + radius * Math.cos(angle) - circle.clientWidth * 0.5) - offset * 0.5;\n                var y = Math.round(this.parentSize * 0.5 + radius * Math.sin(angle) - circle.clientHeight * 0.5) - offset * 0.5;\n                this.spinner.appendChild(circle);\n                circle.style.left = x + "px";\n                circle.style.top = y + "px";\n                angle += step;\n                circleObject = new CircleObject(circle, i);\n                this.circleObjects.push(circleObject);\n            }\n        };\n        return Spinner;\n    }());\n    fabric.Spinner = Spinner;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n/**\n * @namespace fabric\n */\nvar fabric;\n(function (fabric) {\n    "use strict";\n    var Table = (function () {\n        function Table(container) {\n            this.container = container;\n            // Is the table selectable?\n            if (this.container.className.indexOf("ms-Table--selectable") !== -1) {\n                this._addListeners();\n            }\n        }\n        /**\n         * Add event listeners\n         */\n        Table.prototype._addListeners = function () {\n            this.container.addEventListener("click", this._toggleRowSelection.bind(this), false);\n        };\n        /**\n         * Select or deselect a row\n         */\n        Table.prototype._toggleRowSelection = function (event) {\n            var selectedRow = event.target.parentElement;\n            var selectedStateClass = "is-selected";\n            // Toggle the selected state class\n            if (selectedRow.className === selectedStateClass) {\n                selectedRow.className = "";\n            }\n            else {\n                selectedRow.className = selectedStateClass;\n            }\n        };\n        return Table;\n    }());\n    fabric.Table = Table;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n"use strict";\nvar fabric;\n(function (fabric) {\n    var TextFieldConsts;\n    (function (TextFieldConsts) {\n        (function (Type) {\n            Type[Type["Placeholder"] = 0] = "Placeholder";\n            Type[Type["Underlined"] = 1] = "Underlined";\n        })(TextFieldConsts.Type || (TextFieldConsts.Type = {}));\n        var Type = TextFieldConsts.Type;\n    })(TextFieldConsts || (TextFieldConsts = {}));\n    /**\n     * Text Field Plugin\n     *\n     * Adds basic demonstration functionality to .ms-TextField components.\n     */\n    var TextField = (function () {\n        /**\n         *\n         * @param {HTMLDivElement} container - the target container for an instance of TextField\n         * @constructor\n         */\n        function TextField(container) {\n            this._container = container;\n            this._type = [];\n            this._textField = this._container.querySelector(".ms-TextField-field");\n            this._textFieldLabel = this._container.querySelector(".ms-Label");\n            this._setTextFieldType();\n            this._addListeners();\n        }\n        /** Populate _type with various kinds of text fields */\n        TextField.prototype._setTextFieldType = function () {\n            if (this._container.classList.contains("ms-TextField--placeholder")) {\n                this._type.push(TextFieldConsts.Type.Placeholder);\n            }\n            if (this._container.classList.contains("ms-TextField--underlined")) {\n                this._type.push(TextFieldConsts.Type.Underlined);\n            }\n        };\n        /** Add event listeners according to the type(s) of text field */\n        TextField.prototype._addListeners = function () {\n            var _this = this;\n            // Ensure that the text box gets focus when the label is clicked.\n            this._textFieldLabel.addEventListener("click", function (event) {\n                _this._textField.focus();\n            });\n            /** Placeholder - hide/unhide the placeholder  */\n            if (this._type.indexOf(TextFieldConsts.Type.Placeholder) >= 0) {\n                this._textField.addEventListener("focus", function (event) {\n                    _this._textFieldLabel.style.display = "none";\n                });\n                this._textField.addEventListener("blur", function (event) {\n                    // Show only if no value in the text field\n                    if (_this._textField.value.length === 0) {\n                        _this._textFieldLabel.style.display = "block";\n                    }\n                });\n            }\n            /** Underlined - adding/removing a focus class  */\n            if (this._type.indexOf(TextFieldConsts.Type.Underlined) >= 0) {\n                this._textField.addEventListener("focus", function (event) {\n                    _this._container.classList.add("is-active");\n                });\n                this._textField.addEventListener("blur", function (event) {\n                    _this._container.classList.remove("is-active");\n                });\n            }\n        };\n        return TextField;\n    }());\n    fabric.TextField = TextField;\n})(fabric || (fabric = {}));\n\n// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.\n"use strict";\nvar fabric;\n(function (fabric) {\n    /**\n     * Toggle Plugin\n     *\n     * Adds basic demonstration functionality to .ms-Toggle components.\n     *\n     */\n    var Toggle = (function () {\n        /**\n         *\n         * @param {HTMLElement} container - the target container for an instance of Toggle\n         * @constructor\n         */\n        function Toggle(container) {\n            this._container = container;\n            this._toggleField = this._container.querySelector(".ms-Toggle-field");\n            this._addListeners();\n        }\n        Toggle.prototype.removeListeners = function () {\n            this._toggleField.removeEventListener("click", this._toggleHandler.bind(this));\n        };\n        Toggle.prototype._addListeners = function () {\n            var _this = this;\n            this._toggleField.addEventListener("click", this._toggleHandler.bind(this), false);\n            this._toggleField.addEventListener("keyup", function (e) { return (e.keyCode === 32) ? _this._toggleHandler() : null; }, false);\n        };\n        Toggle.prototype._toggleHandler = function () {\n            this._toggleField.classList.toggle("is-selected");\n        };\n        return Toggle;\n    }());\n    fabric.Toggle = Toggle;\n})(fabric || (fabric = {}));\n'},function(e,n){e.exports=function(e){"undefined"!=typeof execScript?execScript(e):eval.call(null,e)}},function(e,n,t){var i=t(0)(t(13),t(33),null,null,null);i.options.__file="/Users/aidewoode/office-ui-fabric-vue/src/components/breadcrumb/Breadcrumb.vue",i.esModule&&Object.keys(i.esModule).some(function(e){return"default"!==e&&"__"!==e.substr(0,2)})&&console.error("named exports are not supported in *.vue files."),i.options.functional&&console.error("[vue-loader] Breadcrumb.vue: functional components are not supported with templates, they should use render functions."),e.exports=i.exports},function(e,n,t){var i=t(0)(t(14),t(41),null,null,null);i.options.__file="/Users/aidewoode/office-ui-fabric-vue/src/components/breadcrumb/BreadcrumbItem.vue",i.esModule&&Object.keys(i.esModule).some(function(e){return"default"!==e&&"__"!==e.substr(0,2)})&&console.error("named exports are not supported in *.vue files."),i.options.functional&&console.error("[vue-loader] BreadcrumbItem.vue: functional components are not supported with templates, they should use render functions."),e.exports=i.exports},function(e,n,t){var i=t(0)(t(15),t(35),null,null,null);i.options.__file="/Users/aidewoode/office-ui-fabric-vue/src/components/button/Button.vue",i.esModule&&Object.keys(i.esModule).some(function(e){return"default"!==e&&"__"!==e.substr(0,2)})&&console.error("named exports are not supported in *.vue files."),i.options.functional&&console.error("[vue-loader] Button.vue: functional components are not supported with templates, they should use render functions."),e.exports=i.exports},function(e,n,t){var i=t(0)(t(16),t(38),null,null,null);i.options.__file="/Users/aidewoode/office-ui-fabric-vue/src/components/callout/Callout.vue",i.esModule&&Object.keys(i.esModule).some(function(e){return"default"!==e&&"__"!==e.substr(0,2)})&&console.error("named exports are not supported in *.vue files."),i.options.functional&&console.error("[vue-loader] Callout.vue: functional components are not supported with templates, they should use render functions."),e.exports=i.exports},function(e,n,t){var i=t(0)(t(17),t(40),null,null,null);i.options.__file="/Users/aidewoode/office-ui-fabric-vue/src/components/checkbox/Checkbox.vue",i.esModule&&Object.keys(i.esModule).some(function(e){return"default"!==e&&"__"!==e.substr(0,2)})&&console.error("named exports are not supported in *.vue files."),i.options.functional&&console.error("[vue-loader] Checkbox.vue: functional components are not supported with templates, they should use render functions."),e.exports=i.exports},function(e,n,t){var i=t(0)(t(18),t(36),null,null,null);i.options.__file="/Users/aidewoode/office-ui-fabric-vue/src/components/label/Label.vue",i.esModule&&Object.keys(i.esModule).some(function(e){return"default"!==e&&"__"!==e.substr(0,2)})&&console.error("named exports are not supported in *.vue files."),i.options.functional&&console.error("[vue-loader] Label.vue: functional components are not supported with templates, they should use render functions."),e.exports=i.exports},function(e,n,t){var i=t(0)(t(19),t(39),null,null,null);i.options.__file="/Users/aidewoode/office-ui-fabric-vue/src/components/link/Link.vue",i.esModule&&Object.keys(i.esModule).some(function(e){return"default"!==e&&"__"!==e.substr(0,2)})&&console.error("named exports are not supported in *.vue files."),i.options.functional&&console.error("[vue-loader] Link.vue: functional components are not supported with templates, they should use render functions."),e.exports=i.exports},function(e,n,t){var i=t(0)(t(20),t(34),null,null,null);i.options.__file="/Users/aidewoode/office-ui-fabric-vue/src/components/table/Table.vue",i.esModule&&Object.keys(i.esModule).some(function(e){return"default"!==e&&"__"!==e.substr(0,2)})&&console.error("named exports are not supported in *.vue files."),i.options.functional&&console.error("[vue-loader] Table.vue: functional components are not supported with templates, they should use render functions."),e.exports=i.exports},function(e,n,t){var i=t(0)(t(21),t(37),null,null,null);i.options.__file="/Users/aidewoode/office-ui-fabric-vue/src/components/table/TableColumn.vue",i.esModule&&Object.keys(i.esModule).some(function(e){return"default"!==e&&"__"!==e.substr(0,2)})&&console.error("named exports are not supported in *.vue files."),i.options.functional&&console.error("[vue-loader] TableColumn.vue: functional components are not supported with templates, they should use render functions."),e.exports=i.exports},function(e,n,t){e.exports={render:function(){var e=this;e.$createElement;return e._c("div",{ref:"breadcrumb",staticClass:"ms-Breadcrumb"},[e._m(0),e._v(" "),e._c("ul",{staticClass:"ms-Breadcrumb-list"},[e._t("default")],2)])},staticRenderFns:[function(){var e=this;e.$createElement;return e._c("div",{staticClass:"ms-Breadcrumb-overflow"},[e._c("div",{staticClass:"ms-Breadcrumb-overflowButton ms-Icon ms-Icon--More"}),e._v(" "),e._c("div",{staticClass:"ms-Breadcrumb-overflowMenu"},[e._c("ul",{staticClass:"ms-ContextualMenu"})])])}]},e.exports.render._withStripped=!0},function(e,n,t){e.exports={render:function(){var e=this;e.$createElement;return e._c("table",{staticClass:"ms-Table",class:e.tableClass},[e._c("thead",[e._c("tr",[e._t("default")],2)]),e._v(" "),e._c("tbody",e._l(e.data,function(n){return e._c("tr",e._l(e.tableColumnItems,function(t){return e._c("td",[e._v("\n        "+e._s(n[t])+"\n      ")])}))}))])},staticRenderFns:[]},e.exports.render._withStripped=!0},function(e,n,t){e.exports={render:function(){var e=this;e.$createElement;return e._c("button",{staticClass:"ms-Button",class:e.buttonClass,on:{click:e.clickEvent}},[e.icon?e._c("span",{staticClass:"ms-Button-icon"},[e._c("i",{staticClass:"ms-Icon",class:e.iconClass})]):e._e(),e._v(" "),e._c("span",{staticClass:"ms-Button-label"},[e._t("default")],2),e._v(" "),e.description?e._c("span",{staticClass:"ms-Button-description"},[e._v(e._s(e.description))]):e._e()])},staticRenderFns:[]},e.exports.render._withStripped=!0},function(e,n,t){e.exports={render:function(){var e=this;e.$createElement;return e._c("label",{staticClass:"ms-Label",class:e.labelClass},[e._t("default")],2)},staticRenderFns:[]},e.exports.render._withStripped=!0},function(e,n,t){e.exports={render:function(){var e=this;e.$createElement;return e._c("th",[e._t("default")],2)},staticRenderFns:[]},e.exports.render._withStripped=!0},function(e,n,t){e.exports={render:function(){var e=this;e.$createElement;return e._c("div",[e._c("div",{ref:"callout",staticClass:"ms-Callout is-hidden",class:e.calloutClass},[e._c("div",{staticClass:"ms-Callout-main"},[e.showClose?e._c("button",{staticClass:"ms-Callout-close"},[e._c("i",{staticClass:"ms-Icon ms-Icon--Clear"})]):e._e(),e._v(" "),e._c("div",{staticClass:"ms-Callout-header"},[e._c("p",{staticClass:"ms-Callout-title"},[e._v(e._s(e.title))])]),e._v(" "),e._c("div",{staticClass:"ms-Callout-inner"},[e._c("div",{staticClass:"ms-Callout-content"},[e.content?e._c("p",{staticClass:"ms-Callout-subText"},[e._v(e._s(e.content))]):e._t("content")],2),e._v(" "),e._c("div",{staticClass:"ms-Callout-actions"},[e._t("actions")],2)])])]),e._v(" "),e._c("span",{ref:"calloutTrigger"},[e._t("default")],2)])},staticRenderFns:[]},e.exports.render._withStripped=!0},function(e,n,t){e.exports={render:function(){var e=this;e.$createElement;return e._c("a",{staticClass:"ms-Link",attrs:{href:e.href,title:e.title},on:{click:e.clickEvent}},[e._t("default")],2)},staticRenderFns:[]},e.exports.render._withStripped=!0},function(e,n,t){e.exports={render:function(){var e=this;e.$createElement;return e._c("div",{ref:"checkbox",staticClass:"ms-CheckBox"},[e._c("input",{staticClass:"ms-CheckBox-input",attrs:{tabindex:"-1",type:"checkbox"},on:{click:e.toggle}}),e._v(" "),e._c("label",{staticClass:"ms-CheckBox-field",class:{"is-disabled":e.disabled},attrs:{role:"checkbox",tabindex:"0","aria-checked":"false",name:"checkbox"}},[e._c("span",{staticClass:"ms-Label"},[e._t("default")],2)])])},staticRenderFns:[]},e.exports.render._withStripped=!0},function(e,n,t){e.exports={render:function(){var e=this;e.$createElement;return e._c("li",{staticClass:"ms-Breadcrumb-listItem"},[e._c("a",{staticClass:"ms-Breadcrumb-itemLink",attrs:{href:e.href}},[e._t("default")],2),e._v(" "),e._c("i",{staticClass:"ms-Breadcrumb-chevron ms-Icon ms-Icon--ChevronRight"})])},staticRenderFns:[]},e.exports.render._withStripped=!0}])});